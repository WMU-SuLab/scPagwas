message("done!")
#############################
## 2.Pathway_pcascore_run
#############################
if (!("pca_cell_df" %in% names(Pagwas))) {
message(paste(utils::timestamp(quiet = T),
" ******* 2nd: Pathway_pcascore_run function start!! ********",
sep = ""
))
tt <- Sys.time()
Pagwas <- Pathway_pcascore_run(
Pagwas = Pagwas,
Pathway_list = Pathway_list,
min.pathway.size = min.pathway.size,
max.pathway.size = max.pathway.size
)
message("done!")
}
##------ Sat Nov 19 10:00:24 2022 ------##
#############################
## 3.GWAS_summary_input
#############################
message(paste(utils::timestamp(quiet = T),
" ******* 3rd: GWAS_summary_input function start! ********",
sep = ""
))
##------ Sat Nov 19 10:00:37 2022 ------##
if (!is.null(gwas_data)) {
if (class(gwas_data) == "character") {
message("** Start to read the gwas_data!")
suppressMessages(gwas_data <- bigreadr::fread2(gwas_data))
} else {
stop("Error:There is need a filename and address for gwas_data")
}
if (maf_filter >= 1 & maf_filter < 0) {
stop("Error:maf_filter should between 0 and 1")
}
tt <- Sys.time()
Pagwas <- GWAS_summary_input(
Pagwas = Pagwas,
gwas_data = gwas_data,
maf_filter = maf_filter
)
rm(gwas_data)
message("done!")
#############################
## 4.SnpToGene
#############################
message(paste(utils::timestamp(quiet = T),
" ******* 4th: SnpToGene start!! ********",
sep = ""
))
tt <- Sys.time()
if (!is.null(block_annotation)) {
Pagwas$snp_gene_df <- SnpToGene(
gwas_data = Pagwas$gwas_data,
block_annotation = block_annotation,
marg = marg
)
} else if (!("snp_gene_df" %in% names(Pagwas))) {
stop("Error: block_annotation should input!")
}
} else if (!("gwas_data" %in% names(Pagwas)) | !("snp_gene_df" %in%
names(Pagwas))) {
stop("Error: gwas_data should be input!")
}
##------ Sat Nov 19 10:00:37 2022 ------##
#############################
## 5.Pathway_annotation_input
#############################
message(paste(utils::timestamp(quiet = T),
" ******* 5th: Pathway_annotation_input function
start! ********",
sep = ""
))
##------ Sat Nov 19 10:00:37 2022 ------##
tt <- Sys.time()
if (!is.null(block_annotation)) {
Pagwas <- Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
} else if (!("snp_gene_df" %in% names(Pagwas))) {
stop("Error: block_annotation should input!")
}
message("done!")
options(bigmemory.allow.dimnames = TRUE)
pos <- NULL
Pachrom_block_list <- lapply(
Pagwas$pathway_blocks,
function(pa_blocks) {
split(pa_blocks,
f = as.vector(pa_blocks$chrom)
)
}
)
names(Pachrom_block_list) <- names(Pagwas$pathway_blocks)
Pagwas$pathway_blocks <- NULL
chrom_gwas_list <- lapply(split(Pagwas$gwas_data,
f = Pagwas$gwas_data$chrom
), function(gwas) {
gwas <- data.table::data.table(gwas)
data.table::setkey(gwas, pos)
return(gwas)
})
Pagwas$gwas_data <- NULL
Pathway_sclm_results <- list()
Pathway_ld_gwas_data <- list()
SNP_A <- NULL
message(paste0(
"* Start to link gwas and pathway block annotations for ",
length(Pachrom_block_list), " pathways!"
))
options(bigmemory.allow.dimnames = TRUE)
pb <- txtProgressBar(style = 3)
Rn<-random::randomStrings(n=length(Pachrom_block_list),len=9,digits=TRUE,
upperalpha=F,
loweralpha=TRUE,
unique=TRUE,
check=F)
Rn<-Rn[,1]
names(Rn)<-names(Pachrom_block_list)
Rn
pathway<-names(Pachrom_block_list)[1]
Pa_chrom_block <- Pachrom_block_list[[pathway]]
Pa_chrom_data <- lapply(names(Pa_chrom_block), function(chrom) {
chrom_block <- Pa_chrom_block[[chrom]]
ld_data <- chrom_ld[[chrom]]
data.table::setkey(ld_data, SNP_A) # just in case
if (!(chrom %in% names(chrom_gwas_list))) {
warning(paste(chrom, " for gwas is missing, could be a problem!",
sep = ""
))
return(NULL)
}
if (is.null(chrom_gwas_list[[chrom]])) {
warning(paste(chrom, " data missing, could be a problem", sep = ""))
return(NULL)
}
rsids <- Pagwas$snp_gene_df[which(Pagwas$snp_gene_df$label %in%
chrom_block$label), c("rsid", "label")]
c2 <- chrom_gwas_list[[chrom]]
rsids_gwas <- suppressMessages(dplyr::inner_join(rsids, c2))
if (is.null(nrow(rsids_gwas))) {
return(NULL)
}
beta_squared <- rsids_gwas$beta^2
# again, pretty sure this is binarize data table lookup
sub_ld <- ld_data[.(as.vector(rsids_gwas$rsid)), nomatch = 0L]
return(list(rsids_gwas, beta_squared, sub_ld, chrom_block))
})
# cbind_df代替 rbind_df(list_df)
rm(Pa_chrom_block)
pa_block <- list()
pa_block$block_info <- bigreadr::rbind_df(lapply(
seq_len(length(Pa_chrom_data)),
function(i) Pa_chrom_data[[i]][[4]]
))
pa_block$snps <- bigreadr::rbind_df(lapply(
seq_len(length(Pa_chrom_data)),
function(i) Pa_chrom_data[[i]][[1]]
))
pa_block$y <- unlist(lapply(
seq_len(length(Pa_chrom_data)),
function(i) Pa_chrom_data[[i]][[2]]
))
pa_block$ld_data <- bigreadr::rbind_df(lapply(
seq_len(length(Pa_chrom_data)),
function(i) Pa_chrom_data[[i]][[3]]
))
rsid_x <- intersect(pa_block$snps$rsid, unique(
unlist(pa_block$ld_data[, 1:2])
))
pa_block$ld_data <- as.data.frame(
pa_block$ld_data[pa_block$ld_data$SNP_A
%in% rsid_x & pa_block$ld_data$SNP_B
%in% rsid_x, ]
)
rm(Pa_chrom_data)
if (nrow(pa_block$ld_data) == 0) {
ld_matrix <- diag(1, nrow = nrow(pa_block$snps))
} else {
ld_matrix <- make_ld_matrix(
all_snps = pa_block$snps$rsid,
ld_data = pa_block$ld_data
)
}
pa_block$n_snps <- nrow(pa_block$snps)
pa_block$ld_matrix_squared <- ld_matrix * ld_matrix
Pathway_sclm_results[[pathway]] <- get_Pathway_sclm(
pa_block = pa_block,
pca_scCell_mat = Pagwas$pca_scCell_mat,
data_mat = Pagwas$data_mat,
rawPathway_list = Pagwas$rawPathway_list,
snp_gene_df = Pagwas$snp_gene_df,
backingpath=backingpath,
n.cores=n.cores,
Rns=Rn[pathway],
)
pca_scCell_mat = Pagwas$pca_scCell_mat
data_mat = Pagwas$data_mat
rawPathway_list = Pagwas$rawPathway_list
snp_gene_df = Pagwas$snp_gene_df
backingpath=backingpath
backingpath
Rns=Rn[pathway]
Rns
pathway <- unique(pa_block$block_info$pathway)
x <- matrix(pca_scCell_mat[pathway, ], nrow = 1)
rownames(x) <- pathway
if (pa_block$n_snps == 0) {
pa_block$include_in_inference <- F
pa_block$x <- NULL # to make sure we totally replace previous stuffs
return(pa_block)
}
mg <- intersect(rawPathway_list[[pathway]], rownames(data_mat))
if (length(mg) == 1) {
x2 <- matrix(data_mat[mg, ], nrow = 1)
x2 <- x2 / (x2 + 0.0001)
rownames(x2) <- mg
} else {
x2 <- biganalytics::apply(data_mat[mg, ], 2, function(ge) {
if (sum(ge) == 0) {
return(rep(0, length(ge)))
} else {
return(ge / sum(ge))
}
})
rownames(x2) <- mg
}
x2 <- as(x2, "CsparseMatrix")
if (pa_block$n_snps > 1) {
x2 <- x2[pa_block$snps$label, ]
pa_block$n_snps <- nrow(pa_block$snps)
x <- x[rep(1, pa_block$n_snps), ]
rownames(x) <- pa_block$snps$rsid
#x <- x * snp_gene_df[pa_block$snps$rsid, "slope"]
x2 <- x2 * x
} else {
x2 <- matrix(x2[pa_block$snps$label, ], nrow = 1)
rownames(x2) <- pa_block$snps$label
pa_block$n_snps <- nrow(pa_block$snps)
x <- matrix(x[rep(1, pa_block$n_snps), ], nrow = 1)
rownames(x) <- pa_block$snps$rsid
#x <- matrix(as.numeric(x) * as.numeric(
#  snp_gene_df[pa_block$snps$rsid, "slope"]
#), nrow = 1)
x2 <- matrix(as.numeric(x2) * as.numeric(x), nrow = 1)
x2 <- as(x2, "CsparseMatrix")
}
pa_block$x <- as(pa_block$ld_matrix_squared %*% x2 , "CsparseMatrix")
pa_block$include_in_inference <- T
noise_per_snp <- pa_block$snps$se**2
if (pa_block$n_snps > 2) {
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(
Pagwas_x = pa_block$x[!na_elements, ],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
Rns=Rns,
backingpath=backingpath,
n.cores=n.cores
)
}}}}
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(
Pagwas_x = pa_block$x[!na_elements, ],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
Rns=Rns,
backingpath=backingpath,
n.cores=n.cores
)
results
results[is.na(results)] <- 0
names(results) <- colnames(data_mat)
get_Pathway_sclm(
pa_block = pa_block,
pca_scCell_mat = Pagwas$pca_scCell_mat,
data_mat = Pagwas$data_mat,
rawPathway_list = Pagwas$rawPathway_list,
snp_gene_df = Pagwas$snp_gene_df,
backingpath=backingpath,
n.cores=n.cores,
Rns=Rn[pathway],
)
Pathway_sclm_results[[pathway]] <- get_Pathway_sclm(
pa_block = pa_block,
pca_scCell_mat = Pagwas$pca_scCell_mat,
data_mat = Pagwas$data_mat,
rawPathway_list = Pagwas$rawPathway_list,
snp_gene_df = Pagwas$snp_gene_df,
backingpath=backingpath,
n.cores=n.cores,
Rns=Rn[pathway]
)
if (file.exists(paste0("./", output.dirs, "/temp"))) {
unlink(paste0("./", output.dirs, "/temp"),recursive = TRUE)
cat("bk files has been deleted")
}
if (file.exists(paste0("./", output.dirs, "/temp"))) {
unlink(paste0("./", output.dirs, "/temp"),recursive = TRUE)
cat("bk files has been deleted")
}
devtools::load_all(".")
system.time(
Pagwas_singlecell<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=T,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
)
##------ Sat Nov 19 10:26:21 2022 ------##
##------ Sat Nov 19 10:26:25 2022 ------##
##------ Sat Nov 19 10:26:35 2022 ------##
##------ Sat Nov 19 10:26:35 2022 ------##
##------ Sat Nov 19 10:26:36 2022 ------##
##------ Sat Nov 19 10:26:37 2022 ------##
##------ Sat Nov 19 10:28:48 2022 ------##
##------ Sat Nov 19 10:28:49 2022 ------##
##------ Sat Nov 19 10:28:54 2022 ------##
renv::snapshot()
devtools::document()
devtools::document()
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::document()
library(scPagwas)
Pagwas_celltypes<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=F,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
##------ Sat Nov 19 11:00:35 2022 ------##
##------ Sat Nov 19 11:00:40 2022 ------##
devtools::document()
devtools::load_all(".")
Pagwas_celltypes<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=F,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
##------ Sat Nov 19 11:24:54 2022 ------##
##------ Sat Nov 19 11:24:57 2022 ------##
##------ Sat Nov 19 11:25:15 2022 ------##
##------ Sat Nov 19 11:25:15 2022 ------##
##------ Sat Nov 19 11:25:15 2022 ------##
##------ Sat Nov 19 11:25:17 2022 ------##
##------ Sat Nov 19 11:25:58 2022 ------##
system.time(
Pagwas_singlecell<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=T,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
)
##------ Sat Nov 19 11:29:18 2022 ------##
##------ Sat Nov 19 11:29:22 2022 ------##
##------ Sat Nov 19 11:29:38 2022 ------##
##------ Sat Nov 19 11:29:38 2022 ------##
##------ Sat Nov 19 11:29:38 2022 ------##
##------ Sat Nov 19 11:29:39 2022 ------##
##------ Sat Nov 19 11:31:44 2022 ------##
##------ Sat Nov 19 11:31:45 2022 ------##
##------ Sat Nov 19 11:31:50 2022 ------##
devtools::load_all(".")
system.time(
Pagwas_singlecell<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=T,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
)
##------ Sat Nov 19 11:38:06 2022 ------##
##------ Sat Nov 19 11:38:09 2022 ------##
##------ Sat Nov 19 11:38:20 2022 ------##
##------ Sat Nov 19 11:38:20 2022 ------##
##------ Sat Nov 19 11:38:21 2022 ------##
##------ Sat Nov 19 11:38:22 2022 ------##
##------ Sat Nov 19 11:40:27 2022 ------##
##------ Sat Nov 19 11:40:28 2022 ------##
##------ Sat Nov 19 11:40:33 2022 ------##
devtools::document()
library(scPagwas)
Pagwas_celltypes<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=F,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
##------ Sat Nov 19 11:48:11 2022 ------##
##------ Sat Nov 19 11:48:16 2022 ------##
system.time(
Pagwas_singlecell<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=T,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
)
##------ Sat Nov 19 11:50:01 2022 ------##
##------ Sat Nov 19 11:50:05 2022 ------##
devtools::load_all(".")
system.time(
Pagwas_singlecell<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=T,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
)
##------ Sat Nov 19 11:54:58 2022 ------##
##------ Sat Nov 19 11:55:02 2022 ------##
##------ Sat Nov 19 11:55:17 2022 ------##
##------ Sat Nov 19 11:55:17 2022 ------##
##------ Sat Nov 19 11:55:18 2022 ------##
##------ Sat Nov 19 11:55:19 2022 ------##
##------ Sat Nov 19 11:57:56 2022 ------##
##------ Sat Nov 19 11:57:58 2022 ------##
##------ Sat Nov 19 11:58:03 2022 ------##
library(scPagwas)
Pagwas_celltypes<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=F,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
##------ Sat Nov 19 12:01:52 2022 ------##
##------ Sat Nov 19 12:01:56 2022 ------##
##------ Sat Nov 19 12:02:13 2022 ------##
##------ Sat Nov 19 12:02:13 2022 ------##
##------ Sat Nov 19 12:02:13 2022 ------##
##------ Sat Nov 19 12:02:14 2022 ------##
##------ Sat Nov 19 12:02:57 2022 ------##
system.time(
Pagwas_singlecell<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="Test",
output.dirs="Test",
Pathway_list=Genes_by_pathway_kegg,
assay="RNA",
singlecell=T,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
)
##------ Sat Nov 19 12:04:00 2022 ------##
##------ Sat Nov 19 12:04:04 2022 ------##
##------ Sat Nov 19 12:04:16 2022 ------##
##------ Sat Nov 19 12:04:16 2022 ------##
##------ Sat Nov 19 12:04:16 2022 ------##
##------ Sat Nov 19 12:04:18 2022 ------##
##------ Sat Nov 19 12:06:23 2022 ------##
##------ Sat Nov 19 12:06:25 2022 ------##
##------ Sat Nov 19 12:06:29 2022 ------##
usethis::use_version()
