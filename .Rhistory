gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 2,
split_n=1)
data(Genes_by_pathway_kegg)
#gene annotation files.
data(block_annotation)
#LD data
data(chrom_ld)
#1.start to run the wrapper functions for preprogress.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 2,
split_n=1)
##------ Thu Jun 09 10:18:13 2022 ------##
##------ Thu Jun 09 10:18:18 2022 ------##
##------ Thu Jun 09 10:18:30 2022 ------##
##------ Thu Jun 09 10:18:30 2022 ------##
##------ Thu Jun 09 10:18:30 2022 ------##
##------ Thu Jun 09 10:18:31 2022 ------##
##------ Thu Jun 09 10:18:50 2022 ------##
##------ Thu Jun 09 10:18:51 2022 ------##
##------ Thu Jun 09 10:18:57 2022 ------##
Pagwas = NULL;
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas");
output.prefix="test";
output.dirs="scPagwastest_output";
block_annotation = block_annotation;
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas");
assay="RNA";
Pathway_list=Genes_by_pathway_kegg;
chrom_ld=chrom_ld;
split_n=1;
marg=10000;
singlecell=T;
celltype=T;
n_topgenes=1000;
maf_filter = 0.01;
min_clustercells=10;
min.pathway.size=5;
max.pathway.size=300;
iters=200;
param.file=T;
remove_outlier=T;
log.file='scPagwas.run.log';
ncores=2;
if (!dir.exists(output.dirs)) {
dir.create(output.dirs)
}
cat("## start at:", format(Sys.time()), "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"))
## miximal file path lenght;
## Windows OS support max. 259 characters
max.nchar.file.path <- 259
param.str <- c(
paste("##", Sys.time()),
paste("input gwas data: ", gwas_data, sep = "\t"),
paste0("Single_data: ", if (class(Single_data) == "Seurat") dim(Single_data) else Single_data),
paste("assay: ", assay, sep = "\t"),
paste("Pathway length: ", length(Pathway_list), collapse = " ", sep = "\t"),
paste("split_n: ", split_n, sep = "\t"),
paste("marg: ", marg, sep = "\t"),
paste("maf_filter: ", maf_filter, sep = "\t"),
paste("min_clustercells: ", min_clustercells, sep = "\t"),
paste("min.pathway.size: ", min.pathway.size, sep = "\t"),
paste("max.pathway.size: ", max.pathway.size, sep = "\t"),
paste("remove_outlier: ", remove_outlier, sep = "\t"),
paste("iters: ", iters, sep = "\t"),
paste("ncores: ", ncores, sep = "\t")
)
writeLines(param.str, con = paste0("./", output.dirs, "/", output.prefix, "_parameters.txt"))
# }
Sys.setenv(R_LOCAL_CACHE = paste0("./", output.dirs, "/scPagwas_cache"))
tt <- Sys.time()
if (is.null(Pagwas)) {
Pagwas <- list()
# class(Pagwas) <- 'Pagwas'
} else if (class(Pagwas) == "Seurat" & is.null(Single_data)) {
Single_data<-Pagwas
Pagwas <- list()
Pagwas<-Single_data@misc
if("scPagwasPaPca" %in% Assays(Single_data)){
Pagwas$pca_scCell_mat<-GetAssayData(Single_data,assay = "scPagwasPaPca")
}
if(assay %in% Assays(Single_data)){
Pagwas$data_mat<-GetAssayData(Single_data,assay = assay)
}else{
stop("Error:assay is not in Pagwas!")
}
if(is.null(Pathway_list)){
stop("Error:Pathway_list should be input!")
}
SOAR::Store(Single_data)
Pagwas$rawPathway_list <- Pathway_list
}else if(class(Pagwas) == "Seurat" & !is.null(Single_data)){
message("Warning:Single_data and Pagwas seruat class are redundant!
we will keep the new Single_data and rerun the Single_data_input and Pathway_pcascore_run function")
Pagwas <- list()
}else if(class(Pagwas) == "list" & is.null(Single_data)){
stop("Error:Single_data should be input!, the same as Pagwas")
}else if(class(Pagwas) == "list" & !is.null(Single_data)){
Pagwas$rawPathway_list <- Pathway_list
}else if(class(Pagwas) != "list" ){
stop("Error:The class for Pagwas is wrong! Should be NULL, list or Seurat class.")
}
#############################
## 1.Single_data_input
#############################
if (!is.null(Single_data)) {
message(paste(utils::timestamp(quiet = T), " ******* 1st: Single_data_input function start! ********", sep = ""))
tt <- Sys.time()
if (class(Single_data) == "character") {
if (grepl(".rds", Single_data)) {
message("** Start to read the single cell data!")
Single_data <- readRDS(Single_data)
} else {
stop("Error:There is need a data in `.rds` format ")
}
} else if (class(Single_data) != "Seurat") {
stop("Error:There is need a Seurat class for Single_data")
}
if (!assay %in% Assays(Single_data)) {
stop("Error:There is no need assays in your Single_data")
}
if(is.null(Pathway_list)){
stop("Error:Pathway_list should be input!")
}
Pagwas <- Single_data_input(
Pagwas = Pagwas,
assay = assay,
# nfeatures =nfeatures,
Single_data = Single_data,
Pathway_list = Pathway_list,
min_clustercells = min_clustercells
)
Single_data <- Single_data[, colnames(Pagwas$data_mat)]
#save the Single_data
SOAR::Store(Single_data)
message("done!")
cat("Single_data import: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
#############################
## 2.Pathway_pcascore_run
#############################
if(!("pca_cell_df" %in% names(Pagwas))){
message(paste(utils::timestamp(quiet = T), " ******* 2nd: Pathway_pcascore_run function start!! ********", sep = ""))
tt <- Sys.time()
Pagwas <- Pathway_pcascore_run(
Pagwas = Pagwas,
Pathway_list = Pathway_list,
min.pathway.size = min.pathway.size,
max.pathway.size = max.pathway.size
)
message("done!")
cat("Pathway_pcascore_run: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
}
}
##------ Thu Jun 09 10:20:03 2022 ------##
##------ Thu Jun 09 10:20:07 2022 ------##
if (class(gwas_data) == "character") {
message("** Start to read the gwas_data!")
suppressMessages(gwas_data <- bigreadr::fread2(gwas_data))
} else {
stop("Error:There is need a filename and address for gwas_data")
}
if (maf_filter >=1 & maf_filter < 0 ) {
stop("Error:maf_filter should between 0 and 1")
}
tt <- Sys.time()
Pagwas <- GWAS_summary_input(
Pagwas = Pagwas,
gwas_data = gwas_data,
maf_filter = maf_filter
)
rm(gwas_data)
message("done!")
cat("GWAS_summary_input: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
#############################
## 4.Snp2Gene
#############################
message(paste(utils::timestamp(quiet = T), " ******* 4th: Snp2Gene start!! ********", sep = ""))
##------ Thu Jun 09 10:20:53 2022 ------##
tt <- Sys.time()
if (!is.null(block_annotation)) {
snp_gene_df <- Snp2Gene(snp = Pagwas$gwas_data, refGene = block_annotation, marg = marg)
snp_gene_df$slope <- rep(1, nrow(snp_gene_df))
Pagwas$snp_gene_df <- snp_gene_df[snp_gene_df$Disstance == "0", ]
} else if (!("snp_gene_df" %in% names(Pagwas))) {
stop("Error: block_annotation should input!")
}
cat("Snp2Gene: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
tt <- Sys.time()
if (!is.null(block_annotation)) {
Pagwas <- Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
} else if (!("snp_gene_df" %in% names(Pagwas))) {
stop("Error: block_annotation should input!")
}
message("done!")
cat("Pathway_annotation_input: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
message(paste(utils::timestamp(quiet = T), " ******* 6th: Link_pathway_blocks_gwas function start! ********", sep = ""))
##------ Thu Jun 09 10:21:05 2022 ------##
tt <- Sys.time()
if (!is.null(chrom_ld)) {
Pagwas <- Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
split_n = split_n,
singlecell = singlecell,
celltype = celltype,
ncores = ncores
)
message("done!")
} else if (!("Pathway_sclm_results" %in% names(Pagwas))) {
stop("Error: chrom_ld should input!")
}
cat("Link_pathway_blocks_gwas: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
#############################
## 7.Pagwas_perform_regression
#############################
if (celltype) {
message(paste(utils::timestamp(quiet = T), " ******* 7th: Celltype_heritability_contributions function start! ********", sep = ""))
Pagwas$lm_results <- Pagwas_perform_regression(Pathway_ld_gwas_data = Pagwas$Pathway_ld_gwas_data)
Pagwas <- Boot_evaluate(Pagwas, bootstrap_iters = iters, part = 0.5)
Pagwas$Pathway_ld_gwas_data <- NULL
message("done!")
cat("Celltype_heritability_contributions: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
if (!singlecell) {
return(Pagwas)
}
}
##------ Thu Jun 09 10:21:21 2022 ------##
#############################
## 8.scPagwas_perform_score
#############################
if (singlecell) {
message(paste(utils::timestamp(quiet = T), " ******* 8th: scPagwas_perform_score function start! ********", sep = ""))
tt <- Sys.time()
Pagwas$Pathway_ld_gwas_data <- NULL
Pagwas <- scPagwas_perform_score(
Pagwas = Pagwas,
remove_outlier = TRUE
)
# Pagwas$CellsrankPvalue$adj.p <- p.adjust(Pagwas$CellsrankPvalue$pValueHigh,
#  method = "bonferroni")
message("done!")
cat("scPagwas_perform_score: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
#############################
## 9.scGet_gene_heritability_correlation
#############################
message(paste(utils::timestamp(quiet = T), " ******* 9th: scGet_gene_heritability_correlation function start! ********", sep = ""))
tt <- Sys.time()
Pagwas <- scGet_gene_heritability_correlation(Pagwas = Pagwas)
scPagwas_topgenes <- names(Pagwas$gene_heritability_correlation[order(Pagwas$gene_heritability_correlation, decreasing = T), ])[1:n_topgenes]
message("done")
#############################
## 9.output
#############################
#write.table(Pagwas$pca_scCell_mat, file = paste0("./", output.dirs, "/", output.prefix, "_pca_scCell_mat.txt"), quote = F)
#write.table(Pagwas$pca_cell_df, file = paste0("./", output.dirs, "/", output.prefix, "_pca_celltypes_mat.txt"), quote = F)
write.table(Pagwas$Pathway_sclm_results, file = paste0("./", output.dirs, "/", output.prefix, "_Pathway_singlecell_lm_results.txt"), quote = F)
write.csv(Pagwas$bootstrap_results, file = paste0("./", output.dirs, "/", output.prefix, "_cellytpes_bootstrap_results.csv"), quote = F)
write.csv(Pagwas$scPathways_rankPvalue, file = paste0("./", output.dirs, "/", output.prefix, "_singlecell_Pathways_rankPvalue.csv"), quote = F)
write.csv(Pagwas$gene_heritability_correlation, file = paste0("./", output.dirs, "/", output.prefix, "_gene_heritability_correlation.csv"), quote = F)
Pagwas[c(
"VariableFeatures", "merge_scexpr","snp_gene_df",
"rawPathway_list","data_mat"
)] <- NULL
Single_data <- Seurat::AddModuleScore(Single_data, assay = assay, list(scPagwas_topgenes), name = c("scPagwas.topgenes.Score"))
message("* Get rankPvalue for each single cell")
CellScalepValue <- rankPvalue(datS = t(data.matrix(GetAssayData(Single_data, assay = assay)[scPagwas_topgenes, ])), pValueMethod = "scale")
}}}}
celltype
singlecell
message(paste(utils::timestamp(quiet = T), " ******* 8th: scPagwas_perform_score function start! ********", sep = ""))
##------ Thu Jun 09 10:23:06 2022 ------##
tt <- Sys.time()
Pagwas$Pathway_ld_gwas_data <- NULL
Pagwas <- scPagwas_perform_score(
Pagwas = Pagwas,
remove_outlier = TRUE
)
# Pagwas$CellsrankPvalue$adj.p <- p.adjust(Pagwas$CellsrankPvalue$pValueHigh,
#  method = "bonferroni")
message("done!")
cat("scPagwas_perform_score: ", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
cat(Sys.time() - tt, "\n", file = paste0("./", output.dirs, "/scPagwas.run.log"), append = T)
message(paste(utils::timestamp(quiet = T), " ******* 9th: scGet_gene_heritability_correlation function start! ********", sep = ""))
##------ Thu Jun 09 10:23:41 2022 ------##
tt <- Sys.time()
Pagwas <- scGet_gene_heritability_correlation(Pagwas = Pagwas)
scPagwas_topgenes <- names(Pagwas$gene_heritability_correlation[order(Pagwas$gene_heritability_correlation, decreasing = T), ])[1:n_topgenes]
message("done")
write.table(Pagwas$Pathway_sclm_results, file = paste0("./", output.dirs, "/", output.prefix, "_Pathway_singlecell_lm_results.txt"), quote = F)
write.csv(Pagwas$bootstrap_results, file = paste0("./", output.dirs, "/", output.prefix, "_cellytpes_bootstrap_results.csv"), quote = F)
write.csv(Pagwas$scPathways_rankPvalue, file = paste0("./", output.dirs, "/", output.prefix, "_singlecell_Pathways_rankPvalue.csv"), quote = F)
write.csv(Pagwas$gene_heritability_correlation, file = paste0("./", output.dirs, "/", output.prefix, "_gene_heritability_correlation.csv"), quote = F)
Pagwas[c(
"VariableFeatures", "merge_scexpr","snp_gene_df",
"rawPathway_list","data_mat"
)] <- NULL
Single_data <- Seurat::AddModuleScore(Single_data, assay = assay, list(scPagwas_topgenes), name = c("scPagwas.topgenes.Score"))
message("* Get rankPvalue for each single cell")
CellScalepValue <- rankPvalue(datS = t(data.matrix(GetAssayData(Single_data, assay = assay)[scPagwas_topgenes, ])), pValueMethod = "scale")
!seruat_return
seruat_return
!seruat_return
seruat_return=T
!seruat_return
Pagwas[c("snp_gene_df","Pathway_single_results",
"Pathway_sclm_results","CellScalepValue",
"scPagwas.topgenes.Score"
)] <- NULL
#Pagwas[c()] <- NULL
scPagwas_pathway <- SeuratObject::CreateAssayObject(data = Pagwas$Pathway_single_results)
scPagwas_pca <- SeuratObject::CreateAssayObject(data = Pagwas$pca_scCell_mat)
Single_data[["scPagwasPaHeritability"]] <- scPagwas_pathway
Single_data[["scPagwasPaPca"]] <- scPagwas_pca
rm(scPagwas_pathway)
rm(scPagwas_pca)
Pagwas$Pathway_single_results
devtools::load_all(".")
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 2,
split_n=1)
##------ Thu Jun 09 10:28:56 2022 ------##
##------ Thu Jun 09 10:29:00 2022 ------##
##------ Thu Jun 09 10:29:13 2022 ------##
##------ Thu Jun 09 10:29:13 2022 ------##
##------ Thu Jun 09 10:29:13 2022 ------##
##------ Thu Jun 09 10:29:14 2022 ------##
##------ Thu Jun 09 10:29:33 2022 ------##
##------ Thu Jun 09 10:29:34 2022 ------##
##------ Thu Jun 09 10:29:40 2022 ------##
Pagwas_data
head(Pagwas_data@meta.data)
names(Pagwas_data@misc)
devtools::load_all(".")
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 2,
split_n=1)
##------ Thu Jun 09 10:34:31 2022 ------##
##------ Thu Jun 09 10:34:35 2022 ------##
##------ Thu Jun 09 10:34:50 2022 ------##
##------ Thu Jun 09 10:34:51 2022 ------##
##------ Thu Jun 09 10:34:51 2022 ------##
##------ Thu Jun 09 10:34:52 2022 ------##
##------ Thu Jun 09 10:35:11 2022 ------##
##------ Thu Jun 09 10:35:12 2022 ------##
##------ Thu Jun 09 10:35:18 2022 ------##
Pagwas_data
names(Pagwas_data@misc)
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=F,
celltype=T,
ncores = 2,
split_n=1)
##------ Thu Jun 09 10:39:32 2022 ------##
##------ Thu Jun 09 10:39:37 2022 ------##
##------ Thu Jun 09 10:39:48 2022 ------##
##------ Thu Jun 09 10:39:49 2022 ------##
##------ Thu Jun 09 10:39:49 2022 ------##
##------ Thu Jun 09 10:39:50 2022 ------##
##------ Thu Jun 09 10:40:05 2022 ------##
##------ Thu Jun 09 10:40:07 2022 ------##
##------ Thu Jun 09 10:40:13 2022 ------##
names(Pagwas_data)
Pagwas_data<-scPagwas_main(Pagwas = Pagwas_data,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
#Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=F,
celltype=T,
ncores = 2,
split_n=1)
Pagwas_data<-scPagwas_main(Pagwas = Pagwas_data,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=F,
celltype=T,
ncores = 2,
split_n=1)
##------ Thu Jun 09 10:42:18 2022 ------##
##------ Thu Jun 09 10:42:21 2022 ------##
##------ Thu Jun 09 10:42:22 2022 ------##
##------ Thu Jun 09 10:42:23 2022 ------##
##------ Thu Jun 09 10:42:24 2022 ------##
##------ Thu Jun 09 10:42:40 2022 ------##
##------ Thu Jun 09 10:42:42 2022 ------##
##------ Thu Jun 09 10:42:48 2022 ------##
names(Pagwas_data)
Pagwas_data<-scPagwas_main(Pagwas = Pagwas_data,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 2,
split_n=1)
##------ Thu Jun 09 10:43:33 2022 ------##
##------ Thu Jun 09 10:43:37 2022 ------##
##------ Thu Jun 09 10:43:38 2022 ------##
##------ Thu Jun 09 10:43:38 2022 ------##
##------ Thu Jun 09 10:43:39 2022 ------##
##------ Thu Jun 09 10:43:56 2022 ------##
##------ Thu Jun 09 10:43:57 2022 ------##
##------ Thu Jun 09 10:44:03 2022 ------##
Pagwas_data
head(Pagwas_data@meta.data)
names(Pagwas_data@misc)
Pagwas_data<-scPagwas_main(Pagwas = Pagwas_data,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
#Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 2,
split_n=1)
##------ Thu Jun 09 10:47:54 2022 ------##
##------ Thu Jun 09 10:47:58 2022 ------##
##------ Thu Jun 09 10:47:59 2022 ------##
##------ Thu Jun 09 10:47:59 2022 ------##
##------ Thu Jun 09 10:48:01 2022 ------##
##------ Thu Jun 09 10:48:17 2022 ------##
##------ Thu Jun 09 10:48:18 2022 ------##
##------ Thu Jun 09 10:48:25 2022 ------##
Pagwas_data
gc()
renv::snapshot()
