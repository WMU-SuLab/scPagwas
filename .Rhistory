gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data ="E:/RPakage/scPagwas/inst/extdata/scRNAexample_split1.rds",
output.prefix="test1",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 14:12:18 2022 ------##
##------ Wed Jul 06 14:12:21 2022 ------##
##------ Wed Jul 06 14:12:27 2022 ------##
##------ Wed Jul 06 14:12:28 2022 ------##
##------ Wed Jul 06 14:12:28 2022 ------##
##------ Wed Jul 06 14:12:30 2022 ------##
##------ Wed Jul 06 14:12:47 2022 ------##
##------ Wed Jul 06 14:12:48 2022 ------##
##------ Wed Jul 06 14:12:52 2022 ------##
Pagwas_data2<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data ="E:/RPakage/scPagwas/inst/extdata/scRNAexample_split2.rds",
output.prefix="test2",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 14:15:51 2022 ------##
##------ Wed Jul 06 14:15:52 2022 ------##
##------ Wed Jul 06 14:15:56 2022 ------##
##------ Wed Jul 06 14:15:56 2022 ------##
##------ Wed Jul 06 14:15:57 2022 ------##
##------ Wed Jul 06 14:15:58 2022 ------##
##------ Wed Jul 06 14:16:10 2022 ------##
##------ Wed Jul 06 14:16:11 2022 ------##
##------ Wed Jul 06 14:16:14 2022 ------##
Pagwas_data2@misc
names(Pagwas_data2@misc)
pca_cell_df<-lapply(Pagwas_list, function(Pagwas){
return(Pagwas@misc$pca_cell_df)
})
Pagwas_list=list(Pagwas_data1,Pagwas_data2)
pca_cell_df<-lapply(Pagwas_list, function(Pagwas){
return(Pagwas@misc$pca_cell_df)
})
dim(pca_cell_df[[1]])
dim(pca_cell_df[[2]])
names(Pagwas@misc)
names(Pagwas_data1@misc)
bootstrap_results<-lapply(Pagwas_list, function(Pagwas){
return(Pagwas@misc$bootstrap_results)
})
bootstrap_results
bootstrap_results<-lapply(Pagwas_list, function(Pagwas){
return(Pagwas@misc$bootstrap_results[-1,])
})
bootstrap_results
bootstrap_results<-Reduce(function(dtf1, dtf2) rbind(dtf1, dtf2),bootstrap_results)
bootstrap_results
Pagwas_list<-lapply(Pagwas_list, function(Pagwas){
#if(class(Pagwas)!="Seurat") stop("The element in Pagwas_list should all seruat format!")
Pagwas@misc<-list()
return(Pagwas)
})
Pagwas_merge<-merge(Pagwas_list[[1]],y= Pagwas_list[[2:length(Pagwas_list)]], project = "merged", merge.data = TRUE)
Pagwas_merge
Pagwas_merge@assays$scPagwasPaPca
dim(Pagwas_merge@assays$scPagwasPaPca)
scPagwas.gPAS.score <- data.matrix(Pagwas_merge$scPagwas.gPAS.score)
sparse_cor <- corSparse(
X = t(as_matrix(GetAssayData(Pagwas_merge, slot = "data", assay = "RNA"))),
Y = scPagwas.gPAS.score
)
rownames(sparse_cor) <- rownames(GetAssayData(Pagwas_merge, slot = "data", assay = "RNA"))
colnames(sparse_cor) <- "gene_heritability_correlation"
sparse_cor[is.nan(sparse_cor)] <- 0
Pagwas_merge@misc$gene_heritability_correlation <- sparse_cor
Pagwas_merge<-merge(Pagwas_list[[1]],y= Pagwas_list[[2:length(Pagwas_list)]], project = "merged", merge.data = TRUE)
scPagwas.gPAS.score <- data.matrix(Pagwas_merge$scPagwas.gPAS.score)
sparse_cor <- corSparse(
X = t(as_matrix(GetAssayData(Pagwas_merge, slot = "data", assay = "RNA"))),
Y = scPagwas.gPAS.score
)
rownames(sparse_cor) <- rownames(GetAssayData(Pagwas_merge, slot = "data", assay = "RNA"))
colnames(sparse_cor) <- "gene_heritability_correlation"
sparse_cor[is.nan(sparse_cor)] <- 0
Pagwas_merge@misc$gene_heritability_correlation <- sparse_cor
Pagwas_merge@misc$bootstrap_results<-bootstrap_results
scPagwas_topgenes <- names(sparse_cor[order(sparse_cor, decreasing = T), ])[1:n_topgenes]
Pagwas_merge <- Seurat::AddModuleScore(Pagwas_merge, assay =  "RNA", list(scPagwas_topgenes), name = c("scPagwas.TRS.Score"))
n_topgenes<-1000
scPagwas_topgenes <- names(sparse_cor[order(sparse_cor, decreasing = T), ])[1:n_topgenes]
Pagwas_merge <- Seurat::AddModuleScore(Pagwas_merge, assay =  "RNA", list(scPagwas_topgenes), name = c("scPagwas.TRS.Score"))
CellScalepValue <- rankPvalue(datS = t(data.matrix(GetAssayData(Pagwas_merge, assay = "RNA")[scPagwas_topgenes, ])), pValueMethod = "scale")
Pagwas_merge$CellScalepValue <- CellScalepValue[,"pValueHighScale"]
Pagwas_merge$CellScaleqValue <- CellScalepValue[,"qValueHighScale"]
names(Pagwas@misc) %in% "bootstrap_results"
names(Pagwas_data1@misc) %in% "bootstrap_results"
names("bootstrap_results" %in% Pagwas@misc)
names("bootstrap_results" %in% Pagwas_data1@misc)
"bootstrap_results" %in% names(Pagwas_data1@misc)
bootstrap_results<-list(NULL,NULL)
bootstrap_results<-Reduce(function(dtf1, dtf2) rbind(dtf1, dtf2),bootstrap_results)
bootstrap_results
devtools::document()
renv::snapshot()
usethis::use_version()
styler::style_pkg()
lintr::lint_package()
devtools::check()
devtools::load_all(".")
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 14:52:23 2022 ------##
##------ Wed Jul 06 14:52:30 2022 ------##
##------ Wed Jul 06 14:52:45 2022 ------##
##------ Wed Jul 06 14:52:45 2022 ------##
##------ Wed Jul 06 14:52:46 2022 ------##
##------ Wed Jul 06 14:52:47 2022 ------##
##------ Wed Jul 06 14:53:05 2022 ------##
##------ Wed Jul 06 14:53:06 2022 ------##
##------ Wed Jul 06 14:53:12 2022 ------##
saveRDS(Pagwas_data,file = "E:/RPakage/scPagwas/inst/extdata/Pagwas_data.rds")
devtools::document()
devtools::document()
??merge
?Seruat::merge
?Seurat::merge
??Seurat::merge
devtools::document()
renv::snapshot()
devtools::document()
devtools::check()
library(scPagwas)
library(ggplot2)
suppressMessages(library(Seurat))
suppressMessages(library("dplyr"))
#1.start to run the wrapper functions for preprogress.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 15:37:16 2022 ------##
##------ Wed Jul 06 15:37:22 2022 ------##
##------ Wed Jul 06 15:37:39 2022 ------##
##------ Wed Jul 06 15:37:39 2022 ------##
##------ Wed Jul 06 15:37:39 2022 ------##
##------ Wed Jul 06 15:37:41 2022 ------##
##------ Wed Jul 06 15:37:58 2022 ------##
##------ Wed Jul 06 15:37:59 2022 ------##
##------ Wed Jul 06 15:38:04 2022 ------##
Pagwas_data
SOAR::Objects()
devtools::check()
devtools::document()
devtools::check()
use_logo()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
devtools::document()
library(scPagwas)
library(scPagwas)
library(ggplot2)
suppressMessages(library(Seurat))
suppressMessages(library("dplyr"))
#1.start to run the wrapper functions for preprogress.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 16:52:24 2022 ------##
##------ Wed Jul 06 16:52:28 2022 ------##
##------ Wed Jul 06 16:52:37 2022 ------##
##------ Wed Jul 06 16:52:37 2022 ------##
##------ Wed Jul 06 16:52:37 2022 ------##
##------ Wed Jul 06 16:52:38 2022 ------##
##------ Wed Jul 06 16:53:07 2022 ------##
##------ Wed Jul 06 16:53:08 2022 ------##
devtools::document()
library(scPagwas)
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 17:02:15 2022 ------##
##------ Wed Jul 06 17:02:20 2022 ------##
##------ Wed Jul 06 17:02:27 2022 ------##
##------ Wed Jul 06 17:02:27 2022 ------##
##------ Wed Jul 06 17:02:28 2022 ------##
##------ Wed Jul 06 17:02:29 2022 ------##
##------ Wed Jul 06 17:02:58 2022 ------##
##------ Wed Jul 06 17:02:59 2022 ------##
##------ Wed Jul 06 17:03:04 2022 ------##
devtools::document()
library(scPagwas)
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 17:21:55 2022 ------##
##------ Wed Jul 06 17:22:00 2022 ------##
##------ Wed Jul 06 17:22:07 2022 ------##
##------ Wed Jul 06 17:22:07 2022 ------##
##------ Wed Jul 06 17:22:08 2022 ------##
##------ Wed Jul 06 17:22:09 2022 ------##
##------ Wed Jul 06 17:22:38 2022 ------##
devtools::document()、
devtools::document()
library(scPagwas)
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="test",
output.dirs="scPagwastest_output",
block_annotation = block_annotation,
assay="RNA",
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
singlecell=T,
seruat_return=T,
celltype=T,
ncores = 1)
##------ Wed Jul 06 17:34:51 2022 ------##
##------ Wed Jul 06 17:34:56 2022 ------##
##------ Wed Jul 06 17:35:03 2022 ------##
##------ Wed Jul 06 17:35:03 2022 ------##
##------ Wed Jul 06 17:35:03 2022 ------##
##------ Wed Jul 06 17:35:04 2022 ------##
##------ Wed Jul 06 17:35:34 2022 ------##
##------ Wed Jul 06 17:35:35 2022 ------##
##------ Wed Jul 06 17:35:40 2022 ------##
pkgdown::build_site()
pkgdown::build_site()
usethis::use_pkgdown()
usethis::use_pkgdown()
pkgdown::build_site()
library(scPagwas)
pkgdown::build_site()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_vignette("AD trait in Human brain single cell dataset")
usethis::use_vignette("AD_Humanbrain_singlecell_celltype_vignette")
usethis::use_vignette("Data_input_preproccess_for_scPagwas")
?loess
library("scPagwas")
library("Seurat")
library("scRNAseq")
library("SingleCellExperiment")
library("stringr")
scRNA_Healthy_Hema<-readRDS("E:/OneDrive/SingleCell/data/PBMCscATAC-seq/scRNA-Healthy-Hematopoiesis-191120.rds")
scRNA_Healthy_Hema
counts <- assay(scRNA_Healthy_Hema, "counts")
Seu_Healthy_Hema <- CreateSeuratObject(
counts = counts,
meta.data=as.data.frame(colData(scRNA_Healthy_Hema)),
min.cells = 3,
min.features = 200)
Seu_Healthy_Hema
table(scRNA_Healthy_Hema@colData$BioClassification)
scRNA_Healthy_Hema <- ScaleData(scRNA_Healthy_Hema)
scRNA_Healthy_Hema <- NormalizeData(scRNA_Healthy_Hema, normalization.method = "LogNormalize", scale.factor = 10000)
Seu_Healthy_Hema <- ScaleData(Seu_Healthy_Hema)
Seu_Healthy_Hema <- NormalizeData(Seu_Healthy_Hema, normalization.method = "LogNormalize", scale.factor = 10000)
Seu_Healthy_Hema
??strsplit
library('ComplexHeatmap')
library(circlize)
col_fun = colorRamp2(c(0, 10), c("#FBF8F1", "#FC4F4F"))
col_fun(seq(0, 10))
Heatmap(as.matrix(result_list2),
col = col_fun,
#left_annotation = ha,
cluster_columns = T,
cluster_rows = T,
color_space="HLS",
border=T,
row_gap = unit(0.25, "mm"),
show_parent_dend_line=T,
name = "-log2(p)",
#row_order =order(rdf$types),
show_row_names=T,
show_column_names=T
#row_split=rdf$phenotypes
)
usethis::use_vignette("Methods_to_overcome_the_limit_for_running_memory")
gwas_data <- bigreadr::fread2(system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"))
head(gwas_data)
gwas_data<-gwas_data[,c(1,2,3,5,6,7)]
write.table(gwas_data,file="E:/RPakage/scPagwas/inst/extdata/GWAS_summ_example.txt",row.names=F,quote=F)
gwas_data <- bigreadr::fread2(system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"))
head(gwas_data)
system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas")
library(scPagwas)
gwas_data <- bigreadr::fread2(system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"))
head(gwas_data)
Genes_by_pathway_hallmark
library("scPagwas")
Genes_by_pathway_hallmark
Genes_by_pathway_kegg
Genes_by_pathway_reactome
library(scPagwas)
genes.by.reactome.pathway
x <- readLines("E:/OneDrive/GWAS_Multiomics/Pagwas/data/h.all.v7.5.1.symbols.gmt")
res <- strsplit(x, "\t")
names(res) <- vapply(res, function(y) y[1], character(1))
genes.by.hallmark.pathway <- lapply(res, "[", -c(1:2))
genes.by.hallmark.pathway
save(genes.by.hallmark.pathway,file = "E:/RPakage/scPagwas/data/genes.by.hallmark.pathway.RData")
x <- readLines("E:/OneDrive/GWAS_Multiomics/Pagwas/data/c7.all.v7.5.1.symbols.gmt")
res <- strsplit(x, "\t")
names(res) <- vapply(res, function(y) y[1], character(1))
genes.by.immunologic.pathway <- lapply(res, "[", -c(1:2))
save(genes.by.immunologic.pathway,file = "E:/RPakage/scPagwas/data/genes.by.immunologic.pathway.RData")
x <- readLines("E:/OneDrive/GWAS_Multiomics/Pagwas/data/c7.immunesigdb.v7.5.1.symbols.gmt")
res <- strsplit(x, "\t")
names(res) <- vapply(res, function(y) y[1], character(1))
genes.by.immunesigdb.pathway <- lapply(res, "[", -c(1:2))
save(genes.by.immunesigdb.pathway,file = "E:/RPakage/scPagwas/data/genes.by.immunesigdb.pathway.RData")
genes.by.reactome.pathway
length(genes.by.reactome.pathway)
length(unlist(genes.by.reactome.pathway))
reduce_genes.by.reactome.pathway<-scPagwas::reduce_pathway(pathway_seed=names(genes.by.reactome.pathway)[sample(1:length(genes.by.reactome.pathway),500)],
pathway_list=genes.by.reactome.pathway,
remove_proporion=0.6)
reduce_pathway
reduce_pathway
pathway_seed=names(genes.by.reactome.pathway)[sample(1:length(genes.by.reactome.pathway),500)]
pathway_seed
pathway_list=genes.by.reactome.pathway
remove_proporion=0.6
pre_pathways <- setdiff(names(pathway_list), pathway_seed)
p_pa <- unlist(lapply(pre_pathways, function(x) {
p_x <- unlist(lapply(pathway_seed, function(y) {
p_y <- length(intersect(pathway_list[[x]], pathway_list[[y]])) / length(pathway_list[[y]])
if (p_y > remove_proporion) {
return(TRUE)
} else {
return(FALSE)
}
}))
if (sum(p_x) == 0) {
return(TRUE)
} else {
return(FALSE)
}
}))
pre_pathways <- pre_pathways[p_pa]
pathway_list[c(pathway_seed, pre_pathways)]
reduce_pathway <- function(pathway_seed = names(Genes_by_pathway_kegg)[sample(1:length(Genes_by_pathway_kegg), 20)],
pathway_list = Genes_by_pathway_kegg,
remove_proporion = 0.7) {
pre_pathways <- setdiff(names(pathway_list), pathway_seed)
p_pa <- unlist(lapply(pre_pathways, function(x) {
p_x <- unlist(lapply(pathway_seed, function(y) {
p_y <- length(intersect(pathway_list[[x]], pathway_list[[y]])) / length(pathway_list[[y]])
if (p_y > remove_proporion) {
return(TRUE)
} else {
return(FALSE)
}
}))
if (sum(p_x) == 0) {
return(TRUE)
} else {
return(FALSE)
}
}))
pre_pathways <- pre_pathways[p_pa]
return(pathway_list[c(pathway_seed, pre_pathways)])
}
reduce_genes.by.reactome.pathway<-scPagwas::reduce_pathway(pathway_seed=names(genes.by.reactome.pathway)[sample(1:length(genes.by.reactome.pathway),500)],
pathway_list=genes.by.reactome.pathway,
remove_proporion=0.6)
devtools::document()
devtools::document()
library(scPagwas)
library(scPagwas)
length(genes.by.reactome.pathway)
#[1] 1615
length(unlist(genes.by.reactome.pathway))
reduce_genes.by.reactome.pathway<-scPagwas::reduce_pathway(pathway_seed=names(genes.by.reactome.pathway)[sample(1:length(genes.by.reactome.pathway),500)],
pathway_list=genes.by.reactome.pathway,
remove_proporion=0.6)
reduce_pathway
library(scPagwas)
reduce_pathway
reduce_genes.by.reactome.pathway<-scPagwas::reduce_pathway(pathway_seed=names(genes.by.reactome.pathway)[sample(1:length(genes.by.reactome.pathway),500)],
pathway_list=genes.by.reactome.pathway,
remove_proporion=0.6)
pathway_seed = names(Genes_by_pathway_kegg)[sample(1:length(Genes_by_pathway_kegg), 20)]
pathway_list = Genes_by_pathway_kegg
devtools::load_all(".")
remove_proporion = 0.7
pre_pathways <- setdiff(names(pathway_list), pathway_seed)
p_pa <- unlist(lapply(pre_pathways, function(x) {
p_x <- unlist(lapply(pathway_seed, function(y) {
p_y <- length(intersect(pathway_list[[x]], pathway_list[[y]])) / length(pathway_list[[y]])
if (p_y > remove_proporion) {
return(TRUE)
} else {
return(FALSE)
}
}))
if (sum(p_x) == 0) {
return(TRUE)
} else {
return(FALSE)
}
}))
pre_pathways <- pre_pathways[p_pa]
pathway_list[c(pathway_seed, pre_pathways)]
renv::snapshot()
devtools::document()
library(scPagwas)
reduce_genes.by.reactome.pathway<-scPagwas::reduce_pathway(pathway_seed=names(genes.by.reactome.pathway)[sample(1:length(genes.by.reactome.pathway),500)],
pathway_list=genes.by.reactome.pathway,
remove_proporion=0.6)
length(reduce_genes.by.reactome.pathway)
length(unlist(reduce_genes.by.reactome.pathway))
head(block_annotation)
head(chrom_ld[[1]])
names(chrom_ld)
class(chrom_ld)
chrom_ld[1]
head(chrom_ld["chr1"]])
head(chrom_ld["chr1"])
chrom_ld["chr1"]
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "figures/vignette-",
out.width = "60%"
)
suppressMessages(library(scPagwas))
head(block_annotation)
suppressMessages(library(scPagwas))
class(chrom_ld)
#[1] "list"
chrom_ld["chr1"]
usethis::use_vignette("Data_input_preproccess_for_scPagwas")
---
title: "Data_input_preproccess_for_scPagwas"
date: "Last Updated: `r format(Sys.time(), '%d, %B, %Y at %H:%M')`"
output: rmarkdown::html_vignette
md_document:
variant: markdown_github
editor_options:
chunk_output_type: console
vignette: >
%\VignetteIndexEntry{Data_input_preproccess_for_scPagwas}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
``````
