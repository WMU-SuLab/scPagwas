#'
#' @description Run inference with added regularization.
#' If p-values are desired use the other inference function. This for
#' prediction purposes.
#' @param Pagwas Pagwas data
#' @param n_folds folds for regularized inference
#'
#' @return
Pagwas_perform_regularized_regression <- function(Pagwas, n_folds = 10) {
message("performing cross validation")
Pagwas$cv_regularized_lm_results <- cv_regularized_parameter_estimator(
xy2vector(Pagwas$Pathway_ld_gwas_data),
n_folds = n_folds
)
# add on block values
Pagwas$regularized_block_values <- calculate_block_values(
Pagwas$pca_cell_df, Pagwas$cv_regularized_lm_results$parameters
)
# calculate expected block values (accounts for ld and snp error)
Pagwas$regularized_expected_block_values <-
calculate_expected_block_values_given_ld(
Pagwas, Pagwas$regularized_block_values
)$expected_block_values
return(Pagwas)
}
#' cv_regularized_parameter_estimator
#' @description Perform regularization inference.
#' Use CV to find appropriate values of lambda for either feature selection
#' @param vectorized_Pagwas_data Pagwas data used for inference
#' @param n_folds number of folds for cross validation
#' @param ... other arguments to pass to cv.glmnet
#'
#' @return
cv_regularized_parameter_estimator <- function(vectorized_Pagwas_data,
n_folds = 10,
...) {
lm_results <- list()
m <- glmnet::cv.glmnet(
x = vectorized_Pagwas_data$x,
y = vectorized_Pagwas_data$y,
offset = vectorized_Pagwas_data$noise_per_snp,
foldid = cut(1:length(vectorized_Pagwas_data$y), breaks = n_folds, labels = F),
family = "gaussian", ... = ...
)
# can choose coefficients with either: lambda.min, or lambda.1se
lm_results$parameters <- stats::coef(m, s = "lambda.min") %>% as.numeric()
annotation_names <- c("intercept", colnames(vectorized_Pagwas_data$x))
names(lm_results$parameters) <- annotation_names
lm_results$model <- m
return(lm_results)
}
Pagwas <- Pagwas_perform_regularized_regression(Pagwas, n_folds = n_folds)
Pagwas$regularized_Pathway_heritability_contributions <- Get_Pathway_heritability_contributions(
Pagwas$pca_cell_df, Pagwas$cv_regularized_lm_results$parameters
)
Pagwas$cv_regularized_lm_results$parameters
Pagwas$cv_regularized_lm_results <- cv_regularized_parameter_estimator(
xy2vector(Pagwas$Pathway_ld_gwas_data),
n_folds = n_folds
)
Pagwas$cv_regularized_lm_results
Pagwas$cv_regularized_lm_results$parameters
Pagwas$regularized_Pathway_heritability_contributions <- Get_Pathway_heritability_contributions(
Pagwas$pca_cell_df, Pagwas$cv_regularized_lm_results$parameters
)
Pagwas$regularized_Pathway_heritability_contributions
Pagwas_perform_regularized_regression <- function(Pagwas, n_folds = 10) {
message("performing cross validation")
Pagwas$cv_regularized_lm_results <- cv_regularized_parameter_estimator(
xy2vector(Pagwas$Pathway_ld_gwas_data),
n_folds = n_folds
)
# add on block values
Pagwas$regularized_Pathway_heritability_contributions <- Get_Pathway_heritability_contributions(
Pagwas$pca_cell_df, Pagwas$cv_regularized_lm_results$parameters
)
return(Pagwas)
}
#' cv_regularized_parameter_estimator
#' @description Perform regularization inference.
#' Use CV to find appropriate values of lambda for either feature selection
#' @param vectorized_Pagwas_data Pagwas data used for inference
#' @param n_folds number of folds for cross validation
#' @param ... other arguments to pass to cv.glmnet
#'
#' @return
cv_regularized_parameter_estimator <- function(vectorized_Pagwas_data,
n_folds = 10,
...) {
lm_results <- list()
m <- glmnet::cv.glmnet(
x = vectorized_Pagwas_data$x,
y = vectorized_Pagwas_data$y,
offset = vectorized_Pagwas_data$noise_per_snp,
foldid = cut(1:length(vectorized_Pagwas_data$y), breaks = n_folds, labels = F),
family = "gaussian", ... = ...
)
# can choose coefficients with either: lambda.min, or lambda.1se
lm_results$parameters <- stats::coef(m, s = "lambda.min") %>% as.numeric()
annotation_names <- c("intercept", colnames(vectorized_Pagwas_data$x))
names(lm_results$parameters) <- annotation_names
lm_results$model <- m
return(lm_results)
}
Pagwas <- Pagwas_perform_regression(Pagwas, iters = iters,n.cores=n.cores)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=genes.by.pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 12:34:47 2022 ------##
##------ Thu Mar 10 12:34:47 2022 ------##
##------ Thu Mar 10 12:34:50 2022 ------##
rm(list=ls())
devtools::document()
devtools::document()
library(scPagwas)
data(Genes_by_pathway_kegg)
data(GWAS_summ_example)
data(gtf_df)
data(scRNAexample)
eqtls_files<-"E:/RPakage/scPagwas/inst/extdata/Liver.v8.egenes.txt.gz"
data(chrom_ld)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=genes.by.pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 12:49:40 2022 ------##
##------ Thu Mar 10 12:49:40 2022 ------##
##------ Thu Mar 10 12:49:43 2022 ------##
loadedNamespaces()
usethis::use_package(package = "RMTstat", type = "Imports")
usethis::use_package(package = "gridExtra", type = "Imports")
usethis::use_data()
devtools::load_all()
rm(list=ls())
library(scPagwas)
data(Genes_by_pathway.kegg)
data(GWAS_summ_example)
data(gtf_df)
data(scRNAexample)
data(eqtls_files)
data(chrom_ld)
data(Genes_by_pathway_kegg)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway.kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 20:09:13 2022 ------##
##------ Thu Mar 10 20:09:13 2022 ------##
##------ Thu Mar 10 20:09:17 2022 ------##
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 20:09:24 2022 ------##
##------ Thu Mar 10 20:09:24 2022 ------##
##------ Thu Mar 10 20:09:26 2022 ------##
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=genes.by.pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 20:09:52 2022 ------##
##------ Thu Mar 10 20:09:52 2022 ------##
##------ Thu Mar 10 20:09:54 2022 ------##
Pagwas = NULL
gwas_data = GWAS_summ_example
add_eqtls="OnlyTSS"
block_annotation = gtf_df
Single_data = scRNAexample
nfeatures =NULL
Pathway_list=genes.by.pathway_kegg
chrom_ld=chrom_ld
marg=10000
maf_filter = 0.01
min.reads = 5
min.detected = 1
min.lib.size = 200
min_clustercells=10
min.pathway.size=5
max.pathway.size=300
iters = 200
perform_cv = F
n_folds = 10
n.cores=1
simp_results=F
if (is.null(Pagwas)) {
Pagwas <- list();
class(Pagwas) <- 'Pagwas'
}
#1.gwas summary data input
if (!is.null(gwas_data)){
Pagwas <- GWAS_summary_input(Pagwas=Pagwas,
gwas_data=gwas_data,
maf_filter=maf_filter)  }
message('done!')
#2.single data input
message(paste(utils::timestamp(quiet = T), ' ******* 2nd: Single_data_input function start! ********',sep = ''))
##------ Thu Mar 10 20:12:25 2022 ------##
Pagwas <- Single_data_input(Pagwas=Pagwas,
nfeatures =nfeatures,
Single_data=Single_data,
min.lib.size = min.lib.size,
min.reads =min.reads,
min.detected =min.detected,
min_clustercells=min_clustercells)
Pagwas <- Pathway_pcascore_run(Pagwas=Pagwas,n.cores=n.cores,
Pathway_list=Pathway_list,
min.pathway.size=min.pathway.size,
max.pathway.size=max.pathway.size
)
library(scPagwas)
library(scPagwas)
## basic example code
data(Genes_by_pathway_kegg)
data(GWAS_summ_example)
data(gtf_df)
data(scRNAexample)
#data(eqtls_files)
data(chrom_ld)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=genes.by.pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 20:19:49 2022 ------##
##------ Thu Mar 10 20:19:49 2022 ------##
##------ Thu Mar 10 20:19:54 2022 ------##
##------ Thu Mar 10 20:20:02 2022 ------##
##------ Thu Mar 10 20:20:02 2022 ------##
##------ Thu Mar 10 20:20:03 2022 ------##
##------ Thu Mar 10 20:20:15 2022 ------##
library(scPagwas)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=genes.by.pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 20:32:54 2022 ------##
##------ Thu Mar 10 20:32:54 2022 ------##
##------ Thu Mar 10 20:32:59 2022 ------##
##------ Thu Mar 10 20:33:07 2022 ------##
##------ Thu Mar 10 20:33:07 2022 ------##
##------ Thu Mar 10 20:33:08 2022 ------##
##------ Thu Mar 10 20:33:13 2022 ------##
##------ Thu Mar 10 20:33:15 2022 ------##
devtools::document()
load("E:/RPakage/scPagwas/data/Genes_by_pathway_kegg.RData")
Genes_by_pathway_kegg<-genes.by.pathway_kegg
save(Genes_by_pathway_kegg,file = "E:/RPakage/scPagwas/data/Genes_by_pathway_kegg.RData")
devtools::document()
library(scPagwas)
library(scPagwas)
data(Genes_by_pathway_kegg)
data(GWAS_summ_example)
data(gtf_df)
data(scRNAexample)
#data(eqtls_files)
data(chrom_ld)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 21:15:45 2022 ------##
##------ Thu Mar 10 21:15:45 2022 ------##
##------ Thu Mar 10 21:15:49 2022 ------##
##------ Thu Mar 10 21:15:55 2022 ------##
##------ Thu Mar 10 21:15:56 2022 ------##
##------ Thu Mar 10 21:15:57 2022 ------##
##------ Thu Mar 10 21:16:16 2022 ------##
##------ Thu Mar 10 21:16:17 2022 ------##
devtools::document()
Bootstrap_P_Barplot(Pagwas=Pagwas,
title = "Test scPagwas",
file = NULL,
width = 5, height = 7)
library(scPagwas)
Bootstrap_P_Barplot(Pagwas=Pagwas,
title = "Test scPagwas",
file = NULL,
width = 5, height = 7)
Bootstrap_P_Barplot(Pagwas=Pagwas,
title = "Test scPagwas",
figurenames = NULL,
width = 5, height = 7)
Bootstrap_estimate_Plot(Pagwas=Pagwas,
figurenames = NULL)
Bootstrap_P_Barplot(Pagwas=Pagwas,
title = "Test scPagwas")
scPagwas_main <- function(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway.kegg,
chrom_ld = chrom_ld)
}
scPagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Thu Mar 10 21:39:06 2022 ------##
##------ Thu Mar 10 21:39:07 2022 ------##
##------ Thu Mar 10 21:39:12 2022 ------##
##------ Thu Mar 10 21:39:19 2022 ------##
##------ Thu Mar 10 21:39:20 2022 ------##
##------ Thu Mar 10 21:39:22 2022 ------##
##------ Thu Mar 10 21:39:27 2022 ------##
##------ Thu Mar 10 21:39:37 2022 ------##
scPagwas<- scPagwas_main(Pagwas = Pagwas,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
simp_results=TRUE)
##------ Thu Mar 10 21:41:44 2022 ------##
##------ Thu Mar 10 21:41:44 2022 ------##
##------ Thu Mar 10 21:41:46 2022 ------##
##------ Thu Mar 10 21:41:55 2022 ------##
##------ Thu Mar 10 21:41:56 2022 ------##
##------ Thu Mar 10 21:41:57 2022 ------##
##------ Thu Mar 10 21:42:02 2022 ------##
scPagwas<- scPagwas_main(Pagwas = Pagwas,
#gwas_data = GWAS_summ_example,
#add_eqtls="OnlyTSS",
#block_annotation = gtf_df,
#Single_data = scRNAexample,
#Pathway_list=Genes_by_pathway_kegg,
#chrom_ld = chrom_ld,
simp_results=TRUE)
##------ Thu Mar 10 21:42:22 2022 ------##
##------ Thu Mar 10 21:42:22 2022 ------##
##------ Thu Mar 10 21:42:22 2022 ------##
##------ Thu Mar 10 21:42:22 2022 ------##
##------ Thu Mar 10 21:42:22 2022 ------##
##------ Thu Mar 10 21:42:22 2022 ------##
##------ Thu Mar 10 21:42:22 2022 ------##
##------ Thu Mar 10 21:42:33 2022 ------##
scPagwas_Visualization(scPagwas = scPagwas,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#000957", highColor = "#EBE645",
size = 0.5,
title = "scPagwas_score")
library(scPagwas)
scPagwas_Visualization(scPagwas = scPagwas,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#000957", highColor = "#EBE645",
size = 0.5,
title = "scPagwas_score")
library(scPagwas)
scPagwas_Visualization(scPagwas = scPagwas,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#000957", highColor = "#EBE645",
size = 0.5,
title = "scPagwas_score")
library(scPagwas)
scPagwas_Visualization(scPagwas = scPagwas,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#000957", highColor = "#EBE645",
size = 0.5,
title = "scPagwas_score")
library(scPagwas)
scPagwas_Visualization(scPagwas = scPagwas,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#000957", highColor = "#EBE645",
size = 0.5,
title = "scPagwas_score")
scPagwas_Visualization(scPagwas = scPagwas,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
scPagwas$scPagwas_score_log<- sign(scPagwas$scPagwas_score)* log2(abs(scPagwas$scPagwas_score))
scPagwas$scPagwas_score<- sign(scPagwas$scPagwas_score)* log2(abs(scPagwas$scPagwas_score))
scPagwas_Visualization(scPagwas = scPagwas,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
scPagwas<- scPagwas_main(Pagwas = Pagwas,
#gwas_data = GWAS_summ_example,
#add_eqtls="OnlyTSS",
#block_annotation = gtf_df,
#Single_data = scRNAexample,
#Pathway_list=Genes_by_pathway_kegg,
#chrom_ld = chrom_ld,
simp_results=TRUE)
##------ Thu Mar 10 22:05:27 2022 ------##
##------ Thu Mar 10 22:05:27 2022 ------##
##------ Thu Mar 10 22:05:27 2022 ------##
##------ Thu Mar 10 22:05:27 2022 ------##
##------ Thu Mar 10 22:05:27 2022 ------##
##------ Thu Mar 10 22:05:27 2022 ------##
##------ Thu Mar 10 22:05:27 2022 ------##
##------ Thu Mar 10 22:05:39 2022 ------##
devtools::document()
library(scPagwas)
scPagwas_score<- sign(scPagwas$scPagwas_score)* log10(abs(scPagwas$scPagwas_score))
scPagwas_Visualization(scPagwas_score = scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
scPagwas_Visualization(scPagwas_score = scPagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
scPagwas_Visualization(scPagwas_score = scPagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
usethis::use_version()
usethis::use_pkgdown()
pkgdown::build_site()
