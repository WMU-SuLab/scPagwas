lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
scPagwas_Visualization(scPagwas_score = scPagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
usethis::use_version()
usethis::use_pkgdown()
pkgdown::build_site()
library(scPagwas)
devtools::document()
library(scPagwas)
devtools::document()
usethis::use_tidy_github_actions()
usethis::use_tidy_github_actions()
library(scPagwas)
usethis::use_news_md()
devtools::check()
package::function()
scPawas::function()
scPagwas::function()
usethis::use_vignette("my-vignette")
data(scRNAexample)
Idents(scRNAexample)
scRNAexample
head(scRNAexample@meta.data)
for (x in 1:length(unique(scRNAexample@meta.data$anno))){
newnames <- paste0(Celltype,x)
oldnames<-unique(scRNAexample@meta.data$anno)[x]
scRNAexample@meta.data$anno[which(scRNAexample@meta.data$anno==oldnames)]<-newnames
}
for (x in 1:length(unique(scRNAexample@meta.data$anno))){
newnames <- paste0("Celltype",x)
oldnames<-unique(scRNAexample@meta.data$anno)[x]
scRNAexample@meta.data$anno[which(scRNAexample@meta.data$anno==oldnames)]<-newnames
}
unique(scRNAexample@meta.data$anno)
head( scRNAexample@meta.data)
Idents(scRNAexample)<-scRNAexample@meta.data$anno
scRNAexample@meta.data<-scRNAexample@meta.data[,1:15]
head(scRNAexample@meta.data)
usethis::use_data(scRNAexample, scPawas, internal = TRUE)
usethis::use_data(scRNAexample, scPagwas, internal = TRUE)
save(scRNAexample,file = "E:/RPakage/scPagwas/data/scRNAexample.RData")
library(scPagwas)
devtools::document()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
devtools::document()\
devtools::document()
txtProgressBar
devtools::document()
devtools::document()
?resize
?resize
devtools::document()
?bplapply
??bplapply
??mclapply
??bplapply
?mclapply
?rowSums
devtools::document()
library(scPagwas)
library(scPagwas)
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
#LD data
data(chrom_ld)
#Pagwas_main is a function wrapper other process codes
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 19:52:24 2022 ------##
##------ Fri Mar 11 19:52:24 2022 ------##
##------ Fri Mar 11 19:52:27 2022 ------##
##------ Fri Mar 11 19:52:34 2022 ------##
##------ Fri Mar 11 19:52:34 2022 ------##
##------ Fri Mar 11 19:52:35 2022 ------##
?setkey
dplyr
?%in%
? %in%
?inner_join
?Reduce
?split
?%>%
? %>%
?GetAssayData
??Idents
?FindVariableFeatures
?as.data.table
?theme_classic
?geom_hline
?theme
?geom_errorbarh
?geom_text
?RunPCA
?ggscatter
?scale_fill_gradient
?new_scale_color
??new_scale_color
?theme_grey
devtools::document()
library(scPagwas)
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
data(chrom_ld)
#Pagwas_main is a function wrapper other process codes
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 20:29:04 2022 ------##
devtools::document()
library(scPagwas)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 20:41:30 2022 ------##
##------ Fri Mar 11 20:41:30 2022 ------##
Pagwas = NULL
gwas_data = GWAS_summ_example
add_eqtls="OnlyTSS"# only snps within TSS windows
block_annotation = gtf_df
Single_data = scRNAexample
Pathway_list=Genes_by_pathway_kegg
chrom_ld = chrom_ld
if (!("Seurat" %in% class(Single_data))) {
message("Single_data is not of class Seurat!")
return(Pagwas)
}
class(Single_data)
Celltype_anno <- data.frame(cellnames = rownames(Single_data@meta.data),
annotation = as.vector(SeuratObject::Idents(Single_data)))
Celltype_anno$annotation <- str_replace_all(Celltype_anno$annotation, "-", ".")
Celltype_anno$annotation <- str_replace_all(Celltype_anno$annotation, " ", ".")
Celltype_anno$annotation <- str_replace_all(Celltype_anno$annotation, "\\+", ".")
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, "-", ".")
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, " ", ".")
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, "\\+", ".")
rownames(Celltype_anno) <- Celltype_anno$cellnames
Pagwas$Celltype_anno <- Celltype_anno
Pagwas$VariableFeatures <- rownames(Single_data)
count <- Seurat::GetAssayData(object = Single_data, slot = "count")
count <- count[, colSums(count > 0) > min.lib.size]
# remove genes that don't have many reads
count <- count[rowSums(count) > min.reads, ]
# remove genes that are not seen in a sufficient number of cells
count <- count[rowSums(count > 0) > min.detected, ]
dim(count)
?colSums
colSums(count > 0)
count <- count[, Matrix::colSums(count > 0) > min.lib.size]
min.lib.size<-200
count <- count[, Matrix::colSums(count > 0) > min.lib.size]
devtools::document()
library(scPagwas)
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
data(chrom_ld)
#Pagwas_main is a function wrapper other process codes
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 20:52:27 2022 ------##
##------ Fri Mar 11 20:52:27 2022 ------##
Matrix::colSums(count > 0)
Matrix::colSums(count > 0) > min.lib.size
devtools::document()
library(scPagwas)
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 20:58:57 2022 ------##
##------ Fri Mar 11 20:58:57 2022 ------##
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 20:59:29 2022 ------##
##------ Fri Mar 11 20:59:29 2022 ------##
Pagwas = NULL
gwas_data = GWAS_summ_example
add_eqtls="OnlyTSS"# only snps within TSS windows
block_annotation = gtf_df
Single_data = scRNAexample
Pathway_list=Genes_by_pathway_kegg
chrom_ld = chrom_ld
min.reads = 5
min.detected = 1
min.lib.size = 200
min_clustercells=10
message("Input single cell count data and cell annotation data!")
if (!("Seurat" %in% class(Single_data))) {
message("Single_data is not of class Seurat!")
return(Pagwas)
}
## get the Variable genes for cells
Celltype_anno <- data.frame(cellnames = rownames(Single_data@meta.data),
annotation = as.vector(SeuratObject::Idents(Single_data)))
#
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, "-", ".")
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, " ", ".")
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, "\\+", ".")
rownames(Celltype_anno) <- Celltype_anno$cellnames
Pagwas$Celltype_anno <- Celltype_anno
# VSingle_data <- Single_data
if (!is.null(nfeatures)) {
if (nfeatures < nrow(Single_data)) {
Single_data <- Seurat::FindVariableFeatures(Single_data,
selection.method = "vst",
nfeatures = nfeatures
)
Pagwas$VariableFeatures <- Seurat::VariableFeatures(Single_data)
# Single_data <- Single_data[,]
} else if (nfeatures == nrow(Single_data)) {
Pagwas$VariableFeatures <- rownames(Single_data)
} else {
stop("Error: nfeatures is too big")
}
} else {
Pagwas$VariableFeatures <- rownames(Single_data)
}
Pagwas$VariableFeatures <- rownames(Single_data)
count <- Seurat::GetAssayData(object = Single_data, slot = "count")
count <- count[, Matrix::colSums(count > 0) > min.lib.size]
count <- count[Matrix::rowSums(count) > min.reads, ]
count <- count[Matrix::rowSums(count > 0) > min.detected, ]
devtools::document()
library(scPagwas)
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
data(chrom_ld)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 21:04:02 2022 ------##
##------ Fri Mar 11 21:04:02 2022 ------##
devtools::document()
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
library(scPagwas)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 21:10:27 2022 ------##
##------ Fri Mar 11 21:10:27 2022 ------##
devtools::document()
devtools::document()
library(scPagwas)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 21:19:22 2022 ------##
##------ Fri Mar 11 21:19:22 2022 ------##
devtools::document()
library(scPagwas)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 21:24:03 2022 ------##
##------ Fri Mar 11 21:24:03 2022 ------##
Seurat::GetAssayData(object = Single_data, slot = "count")
Single_data<-scRNAexample
count <- Seurat::GetAssayData(object = Single_data, slot = "count")
count <- count[, Matrix::colSums(count > 0) > min.lib.size]
min.lib.size<-200
count <- count[, Matrix::colSums(count > 0) > min.lib.size]
min.lib.size = 1000
min.reads = 10
min.detected = 5
min_clustercells = 50
FALSE
count <- Seurat::GetAssayData(object = Single_data, slot = "count")
# remove cells that don't have enough counts
count <- count[, Matrix::colSums(count > 0) > min.lib.size]
# remove genes that don't have many reads
count <- count[Matrix::rowSums(count) > min.reads, ]
# remove genes that are not seen in a sufficient number of cells
count <- count[Matrix::rowSums(count > 0) > min.detected, ]
Celltype_anno <- Celltype_anno[colnames(count), ]
Celltype_anno <- data.frame(cellnames = rownames(Single_data@meta.data),
annotation = as.vector(SeuratObject::Idents(Single_data)))
#
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, "-", ".")
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, " ", ".")
Celltype_anno$annotation <- stringr::str_replace_all(Celltype_anno$annotation, "\\+", ".")
rownames(Celltype_anno) <- Celltype_anno$cellnames
Afterre_cell_types <- table(Celltype_anno$annotation) > min_clustercells
Afterre_cell_types <- names(Afterre_cell_types)[Afterre_cell_types]
message(length(Afterre_cell_types), "cell types are remain, after filter!")
Celltype_anno <- Celltype_anno[Celltype_anno$annotation %in% Afterre_cell_types, ]
count <- count[, Celltype_anno$annotation %in% Afterre_cell_types]
devtools::document()
library(scPagwas)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 21:33:42 2022 ------##
##------ Fri Mar 11 21:33:42 2022 ------##
##------ Fri Mar 11 21:33:45 2022 ------##
##------ Fri Mar 11 21:33:54 2022 ------##
##------ Fri Mar 11 21:33:55 2022 ------##
##------ Fri Mar 11 21:33:56 2022 ------##
##------ Fri Mar 11 21:34:06 2022 ------##
?crossprod
devtools::document()
library(scPagwas)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",# only snps within TSS windows
block_annotation = gtf_df,
Single_data = scRNAexample,
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Fri Mar 11 21:40:29 2022 ------##
##------ Fri Mar 11 21:40:29 2022 ------##
##------ Fri Mar 11 21:40:32 2022 ------##
##------ Fri Mar 11 21:40:43 2022 ------##
##------ Fri Mar 11 21:40:43 2022 ------##
##------ Fri Mar 11 21:40:44 2022 ------##
##------ Fri Mar 11 21:40:50 2022 ------##
##------ Fri Mar 11 21:40:52 2022 ------##
Bootstrap_P_Barplot(Pagwas=Pagwas,title = "Test scPagwas")
devtools::document()
library(scPagwas)
Bootstrap_P_Barplot(Pagwas=Pagwas,title = "Test scPagwas")
Bootstrap_estimate_Plot(Pagwas=Pagwas,figurenames = NULL)
scPagwas<- scPagwas_main(Pagwas = Pagwas,
#gwas_data = GWAS_summ_example,
#add_eqtls="OnlyTSS",
#block_annotation = gtf_df,
#Single_data = scRNAexample,
#Pathway_list=Genes_by_pathway_kegg,
#chrom_ld = chrom_ld,
simp_results=TRUE)
##------ Fri Mar 11 21:47:10 2022 ------##
##------ Fri Mar 11 21:47:10 2022 ------##
##------ Fri Mar 11 21:47:10 2022 ------##
##------ Fri Mar 11 21:47:10 2022 ------##
##------ Fri Mar 11 21:47:10 2022 ------##
##------ Fri Mar 11 21:47:10 2022 ------##
##------ Fri Mar 11 21:47:10 2022 ------##
##------ Fri Mar 11 21:47:21 2022 ------##
?covar_from_df
devtools::document()
library(scPagwas)
library(scPagwas)
library(scPagwas)
library(scPagwas)
library(scPagwas)
scPagwas<- scPagwas_main(Pagwas = Pagwas,
#gwas_data = GWAS_summ_example,
#add_eqtls="OnlyTSS",
#block_annotation = gtf_df,
#Single_data = scRNAexample,
#Pathway_list=Genes_by_pathway_kegg,
#chrom_ld = chrom_ld,
simp_results=TRUE)
##------ Fri Mar 11 21:51:28 2022 ------##
##------ Fri Mar 11 21:51:28 2022 ------##
##------ Fri Mar 11 21:51:28 2022 ------##
##------ Fri Mar 11 21:51:28 2022 ------##
##------ Fri Mar 11 21:51:28 2022 ------##
##------ Fri Mar 11 21:51:28 2022 ------##
##------ Fri Mar 11 21:51:28 2022 ------##
##------ Fri Mar 11 21:51:40 2022 ------##
scPagwas_Visualization(scPagwas_score = scPagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
devtools::document()
scPagwas_Visualization(scPagwas_score = scPagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
library(scPagwas)
scPagwas_Visualization(scPagwas_score = scPagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
devtools::document()
library(scPagwas)
scPagwas_Visualization(scPagwas_score = scPagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
