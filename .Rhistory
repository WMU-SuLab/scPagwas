library(scPagwas)
library(SOAR)
library("dplyr")
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
#LD data
data(chrom_ld)
##create a session for internal storage
# Sys.setenv(R_LOCAL_CACHE="scPagwasSession")
#1.start to run the wrapper functions for preprogress.
Pagwas<-scPagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
scPagwasSession="scPagwasSession")
##------ Thu Mar 17 14:39:35 2022 ------##
##------ Thu Mar 17 14:39:37 2022 ------##
##------ Thu Mar 17 14:39:43 2022 ------##
##------ Thu Mar 17 14:39:56 2022 ------##
##------ Thu Mar 17 14:39:57 2022 ------##
##------ Thu Mar 17 14:39:58 2022 ------##
Pagwas <- link_pwpca_block(Pagwas)
function start!! ********',sep = ''))
Pagwas <- Pagwas_perform_regression(Pagwas, iters = 200,n.cores=1)
Pagwas <- link_scCell_pwpca_block(Pagwas)
names(Pagwas)
library(WGCNA)
install.packages(WGCNA)
install.packages("WGCNA")
BiocManager::install("WGCNA")
library("tidygraph")
library(ggraph)
devtools::document()
devtools::document()
library(scPagwas)
library(scPagwas)
suppressMessages(library(Seurat))
suppressWarnings(library(SOAR))
suppressMessages(library("dplyr"))
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#gene annotation files.
data(block_annotation)
#LD data
data(chrom_ld)
#1.start to run the wrapper functions for preprogress.
Pagwas<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
add_eqtls="OnlyTSS",
block_annotation = block_annotation,
Single_data = system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
scPagwasSession="scPagwasSession")
##------ Mon Mar 21 16:42:26 2022 ------##
##------ Mon Mar 21 16:42:30 2022 ------##
##------ Mon Mar 21 16:42:41 2022 ------##
##------ Mon Mar 21 16:42:41 2022 ------##
##------ Mon Mar 21 16:42:41 2022 ------##
##------ Mon Mar 21 16:42:43 2022 ------##
Objects()
# 7th: link_pwpca_block function start!!
Pagwas <- link_pwpca_block(Pagwas)
#8th: Pagwas_perform_regression function start!!
Pagwas <- Pagwas_perform_regression(Pagwas, iters = 200,n.cores=1)
Objects()
Bootstrap_P_Barplot(Pagwas=Pagwas,
figurenames = NULL,
width = 5,
height = 7,
do_plot=T,
title = "Test scPagwas")
Objects()
Bootstrap_estimate_Plot(Pagwas=Pagwas,
figurenames = NULL,
width = 9,
height = 7,
do_plot=T)
suppressMessages(require("WGCNA"))
suppressMessages(require("patchwork"))
suppressMessages(require("tidygraph"))
suppressMessages(require("ggraph"))
suppressMessages(require("igraph"))
#check the objects
Objects()
plot_pathway_contribution_network(
mat_datExpr=pca_cell_df,
vec_pathwaycontribution=Pagwas$Pathway_block_heritability,
vec_pathways_highlight=names(sort(Pagwas$Pathway_block_heritability,decreasing = T)[1:5]),
n_max_pathways=20,
igraph_algorithm = "drl",
fontface_labels="bold.italic",
color_edge = "#9D9D9D",
fontSize_label_lg=4,
fontSize_legend_lg=4,
fontSize_legend_xlg=4,
edge_thickness = 1,
do_plot=T
)
#check the objects
Objects()
Pagwas <- link_scCell_pwpca_block(Pagwas)
Pagwas <- scPagwas_perform_score(Pagwas)
devtools::document()
library(scPagwas)
library(scPagwas)
suppressMessages(library(Seurat))
suppressWarnings(library(SOAR))
suppressMessages(library("dplyr"))
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#gene annotation files.
data(block_annotation)
#LD data
data(chrom_ld)
#1.start to run the wrapper functions for preprogress.
Pagwas<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
add_eqtls="OnlyTSS",
block_annotation = block_annotation,
Single_data = system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
scPagwasSession="scPagwasSession")
##------ Mon Mar 21 16:59:19 2022 ------##
##------ Mon Mar 21 16:59:24 2022 ------##
##------ Mon Mar 21 16:59:34 2022 ------##
##------ Mon Mar 21 16:59:34 2022 ------##
##------ Mon Mar 21 16:59:35 2022 ------##
##------ Mon Mar 21 16:59:36 2022 ------##
Objects()
# 7th: link_pwpca_block function start!!
Pagwas <- link_pwpca_block(Pagwas)
#8th: Pagwas_perform_regression function start!!
Pagwas <- Pagwas_perform_regression(Pagwas, iters = 200,n.cores=1)
Objects()
Bootstrap_P_Barplot(Pagwas=Pagwas,
figurenames = NULL,
width = 5,
height = 7,
do_plot=T,
title = "Test scPagwas")
Objects()
Bootstrap_estimate_Plot(Pagwas=Pagwas,
figurenames = NULL,
width = 9,
height = 7,
do_plot=T)
suppressMessages(require("WGCNA"))
suppressMessages(require("patchwork"))
suppressMessages(require("tidygraph"))
suppressMessages(require("ggraph"))
suppressMessages(require("igraph"))
#check the objects
Objects()
plot_pathway_contribution_network(
mat_datExpr=pca_cell_df,
vec_pathwaycontribution=Pagwas$Pathway_block_heritability,
vec_pathways_highlight=names(sort(Pagwas$Pathway_block_heritability,decreasing = T)[1:5]),
n_max_pathways=20,
igraph_algorithm = "drl",
fontface_labels="bold.italic",
color_edge = "#9D9D9D",
fontSize_label_lg=4,
fontSize_legend_lg=4,
fontSize_legend_xlg=4,
edge_thickness = 1,
do_plot=T
)
#check the objects
Objects()
Pagwas <- link_scCell_pwpca_block(Pagwas)
Pagwas <- scPagwas_perform_score(Pagwas)
require("RColorBrewer")
require("Seurat")
require("SeuratObject")
require("ggsci")
#check the objects
Objects()
scRNAexample<-readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
scPagwas_Visualization(scPagwas_score = Pagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = NULL,
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score",
do_plot = T)
require("RColorBrewer")
require("Seurat")
require("SeuratObject")
require("ggsci")
#check the objects
Objects()
scRNAexample<-readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
scPagwas_Visualization(scPagwas_score = Pagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = NULL,
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score",
do_plot = T)
library("RColorBrewer")
library("ggplot2")
scPagwas_score <- Pagwas$scPagwas_score[intersect(colnames(scRNAexample),names(Pagwas$scPagwas_score))]
scRNAexample$scPagwas_score <- scPagwas_score
thre <- sort(scRNAexample$scPagwas_score, decreasing = T)[ncol(scRNAexample) * 0.1]
scRNAexample$positiveCells<-rep(0,ncol(scRNAexample))
scRNAexample$positiveCells[scRNAexample$scPagwas_score>=thre]<-1
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="positiveCells",
var_group="anno",
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = F)
library("RColorBrewer")
library("ggplot2")
scPagwas_score <- Pagwas$scPagwas_score[intersect(colnames(scRNAexample),names(Pagwas$scPagwas_score))]
scRNAexample$scPagwas_score <- scPagwas_score
thre <- sort(scRNAexample$scPagwas_score, decreasing = T)[ncol(scRNAexample) * 0.1]
scRNAexample$positiveCells<-rep(0,ncol(scRNAexample))
scRNAexample$positiveCells[scRNAexample$scPagwas_score>=thre]<-1
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="positiveCells",
var_group="anno",
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
library("RColorBrewer")
library("ggplot2")
scPagwas_score <- Pagwas$scPagwas_score[intersect(colnames(scRNAexample),names(Pagwas$scPagwas_score))]
scRNAexample$scPagwas_score <- scPagwas_score
thre <- sort(scRNAexample$scPagwas_score, decreasing = T)[ncol(scRNAexample) * 0.1]
scRNAexample$positiveCells<-rep(0,ncol(scRNAexample))
scRNAexample$positiveCells[scRNAexample$scPagwas_score>=thre]<-1
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="positiveCells",
var_group="anno",
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="positiveCells",
var_group="anno",
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
#' plot_bar_positie_nagtive
#'
#' @description Generate barplot of identity group composition
#' Thanks to the SCOPfunctions package
#' https://github.com/CBMR-Single-Cell-Omics-Platform/SCOPfunctions/blob/main/R/plot.R
#' Generate a percentage barplot that shows the composition of each identity
#' (e.g. sample)in terms of groups (e.g. positive and negative cells for scPagwas)
#'
#' @param seurat_obj Seurat object (Seurat ^3.0)
#' @param var_ident the identify variable, character
#' @param var_group the group variable, character
#' @param vec_group_colors a vector of colors, named by corresponding group. Length must match number of groups. Character
#' @param f_color if vec_group_colors is not provided, the user may instead provide a function f_color() that takes as its only argument the number of colors to generate
#' @param do_plot Whether to plot, logical
#' @param title NULL to leave out
#' @param fontsize_title NULL to leave out
#' @param fontsize_axistitle_x NULL to leave out
#' @param fontsize_axistitle_y NULL to leave out
#' @param fontsize_axistext_x NULL to leave out
#' @param fontsize_axistext_y NULL to leave out
#' @param fontsize_legendtitle NULL to leave out
#' @param fontsize_legendtext NULL to leave out
#' @param figurenames The filename and address of the output plot,
#' @param width figure width
#' @param height figure height
#' @return a ggplot2 object
#' @export
#'
#' @examples
#' p <- plot_barIdentGroup(seurat_obj=seu, var_ident="sample",var_group="cluster")
plot_bar_positie_nagtive <- function(seurat_obj,
var_ident,
var_group,
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=11, name="RdYlBu")),
do_plot = F,
title = NULL,
fontsize_title = 24,
fontsize_axistitle_x = 18,
fontsize_axistitle_y = 18,
fontsize_axistext_x = 12,
fontsize_axistext_y = 12,
fontsize_legendtitle = 12,
fontsize_legendtext = 10,
aspect.ratio=1.2,
figurenames = NULL,
width = 7,
height = 7
) {
#===============data.table with sums==================
dt = data.table("ident" = as.character(seurat_obj@meta.data[[var_ident]]),
"group" = as.character(seurat_obj@meta.data[[var_group]]))
dt[,n_ident := paste0(ident," (n=",.N, ")"), by=ident]
vec_factorLevels <- dt$n_ident[gsub("\\ .*","",dt$n_ident) %>% as.numeric %>% order] %>% unique
dt[,n_ident := factor(n_ident, levels = vec_factorLevels, ordered=T),]
dt_sum <- dt[,.N, by=.(n_ident,group)]
#===============ggplot==================
# colors
if (is.null(vec_group_colors)) {
n_group <- length(unique(dt$group))
vec_group_colors <- f_color(n_group)
names(vec_group_colors) <- unique(dt$group)
}
p <- ggplot(dt_sum,
aes(x = n_ident, y=N, fill = factor(group))) +
geom_bar(
position="fill",
stat="identity",
width=0.6,
show.legend = if (!is.null(fontsize_legendtext)) TRUE else FALSE
#position=position_dodge()
) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(values=vec_group_colors) +
theme(
axis.title.x = if (is.null(fontsize_axistitle_x)) element_blank() else element_text(size=fontsize_axistitle_x, vjust=0),
axis.text.x = if (is.null(fontsize_axistext_x)) element_blank() else element_text(angle = 90, size=fontsize_axistext_x,vjust=0.5),
axis.title.y = if (is.null(fontsize_axistitle_y)) element_blank() else element_text(size=fontsize_axistitle_y),
axis.text.y = if (is.null(fontsize_axistext_y)) element_blank() else  element_text(size=fontsize_axistext_y),
legend.title = if (is.null(fontsize_legendtext)) element_blank() else element_text(size=fontsize_legendtitle),
legend.text = if (is.null(fontsize_legendtext)) element_blank() else element_text(size = fontsize_legendtext),
legend.background = element_blank(),
legend.box.background = element_blank(),
plot.background=element_blank(),
aspect.ratio = aspect.ratio) +
labs(x=var_ident, y="proportion", fill = var_group)
if (do_plot) print(p)
if(!is.null(figurenames)){
pdf(file = figurenames, width = width, height = height)
print(p)
dev.off()
}
#return(p)
}
library("RColorBrewer")
library("ggplot2")
scPagwas_score <- Pagwas$scPagwas_score[intersect(colnames(scRNAexample),names(Pagwas$scPagwas_score))]
scRNAexample$scPagwas_score <- scPagwas_score
thre <- sort(scRNAexample$scPagwas_score, decreasing = T)[ncol(scRNAexample) * 0.1]
scRNAexample$positiveCells<-rep(0,ncol(scRNAexample))
scRNAexample$positiveCells[scRNAexample$scPagwas_score>=thre]<-1
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="positiveCells",
var_group="anno",
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
devtools::document()
devtools::document()
library(scPagwas)
library(scPagwas)
suppressMessages(library(Seurat))
suppressWarnings(library(SOAR))
suppressMessages(library("dplyr"))
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#gene annotation files.
data(block_annotation)
#LD data
data(chrom_ld)
#1.start to run the wrapper functions for preprogress.
Pagwas<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
add_eqtls="OnlyTSS",
block_annotation = block_annotation,
Single_data = system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
scPagwasSession="scPagwasSession")
##------ Mon Mar 21 17:07:36 2022 ------##
##------ Mon Mar 21 17:07:40 2022 ------##
##------ Mon Mar 21 17:07:50 2022 ------##
##------ Mon Mar 21 17:07:50 2022 ------##
##------ Mon Mar 21 17:07:51 2022 ------##
##------ Mon Mar 21 17:07:52 2022 ------##
Objects()
# 7th: link_pwpca_block function start!!
Pagwas <- link_pwpca_block(Pagwas)
#8th: Pagwas_perform_regression function start!!
Pagwas <- Pagwas_perform_regression(Pagwas, iters = 200,n.cores=1)
Objects()
Bootstrap_P_Barplot(Pagwas=Pagwas,
figurenames = NULL,
width = 5,
height = 7,
do_plot=T,
title = "Test scPagwas")
Objects()
Bootstrap_estimate_Plot(Pagwas=Pagwas,
figurenames = NULL,
width = 9,
height = 7,
do_plot=T)
suppressMessages(require("WGCNA"))
suppressMessages(require("patchwork"))
suppressMessages(require("tidygraph"))
suppressMessages(require("ggraph"))
suppressMessages(require("igraph"))
#check the objects
Objects()
plot_pathway_contribution_network(
mat_datExpr=pca_cell_df,
vec_pathwaycontribution=Pagwas$Pathway_block_heritability,
vec_pathways_highlight=names(sort(Pagwas$Pathway_block_heritability,decreasing = T)[1:5]),
n_max_pathways=20,
igraph_algorithm = "drl",
fontface_labels="bold.italic",
color_edge = "#9D9D9D",
fontSize_label_lg=4,
fontSize_legend_lg=4,
fontSize_legend_xlg=4,
edge_thickness = 1,
do_plot=T
)
#check the objects
Objects()
Pagwas <- link_scCell_pwpca_block(Pagwas)
Pagwas <- scPagwas_perform_score(Pagwas)
require("RColorBrewer")
require("Seurat")
require("SeuratObject")
require("ggsci")
#check the objects
Objects()
scRNAexample<-readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
scPagwas_Visualization(scPagwas_score = Pagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = NULL,
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score",
do_plot = T)
library("RColorBrewer")
library("ggplot2")
scPagwas_score <- Pagwas$scPagwas_score[intersect(colnames(scRNAexample),names(Pagwas$scPagwas_score))]
scRNAexample$scPagwas_score <- scPagwas_score
thre <- sort(scRNAexample$scPagwas_score, decreasing = T)[ncol(scRNAexample) * 0.1]
scRNAexample$positiveCells<-rep(0,ncol(scRNAexample))
scRNAexample$positiveCells[scRNAexample$scPagwas_score>=thre]<-1
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="positiveCells",
var_group="anno",
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="anno",
var_group="positiveCells",
vec_group_colors=c("#E8D0B3","#7EB5A6"),
#f_color=colorRampPalette(brewer.pal(n=11, name="RdYlBu")),
do_plot = F)
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="anno",
var_group="positiveCells",
vec_group_colors=c("#E8D0B3","#7EB5A6"),
#f_color=colorRampPalette(brewer.pal(n=11, name="RdYlBu")),
do_plot = F)
plot_bar_positie_nagtive(seurat_obj=scRNAexample,
var_ident="anno",
var_group="positiveCells",
vec_group_colors=c("#E8D0B3","#7EB5A6"),
#f_color=colorRampPalette(brewer.pal(n=11, name="RdYlBu")),
do_plot = T)
top5genes<-rownames(Pagwas$gene_heritability_correlation)[order(Pagwas$gene_heritability_correlation,decreasing = T)[1:5]]
plot_vln_Corgenes(seurat_obj=scRNAexample,
assay="RNA", slot="data",
var_group="anno",# 细胞cluster注释列
vec_features=top5genes,
vec_group_colors= pal_d3(alpha =0.5)(10),
do_plot = T
)
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
