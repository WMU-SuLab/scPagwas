Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
##------ Wed Aug 23 16:05:27 2023 ------##
##------ Wed Aug 23 16:05:31 2023 ------##
##------ Wed Aug 23 16:05:44 2023 ------##
##------ Wed Aug 23 16:05:44 2023 ------##
##------ Wed Aug 23 16:05:44 2023 ------##
##------ Wed Aug 23 16:05:45 2023 ------##
##------ Wed Aug 23 16:06:04 2023 ------##
##------ Wed Aug 23 16:06:05 2023 ------##
##------ Wed Aug 23 16:06:07 2023 ------##
devtools::load_all(".")
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
##------ Mon Aug 28 10:13:27 2023 ------##
##------ Mon Aug 28 10:13:32 2023 ------##
##------ Mon Aug 28 10:14:06 2023 ------##
##------ Mon Aug 28 10:14:06 2023 ------##
##------ Mon Aug 28 10:14:06 2023 ------##
##------ Mon Aug 28 10:14:08 2023 ------##
##------ Mon Aug 28 10:14:17 2023 ------##
##------ Mon Aug 28 10:14:18 2023 ------##
##------ Mon Aug 28 10:14:20 2023 ------##
devtools::document()
install.packages("devtools")
install.packages("usethis")
install.packages(‘glmnet’, ‘GenomicRanges’, ‘ggthemes’, ‘ggtext’, ‘reshape’)
install.packages('glmnet', 'GenomicRanges', 'ggthemes', 'ggtext', 'reshape')
install.packages('glmnet', 'ggthemes', 'ggtext', 'reshape')
install.packages('glmnet', 'ggthemes', 'ggtext', 'reshape')
install.packages("glmnet")
install.packages("ggthemes")
install.packages("ggtext")
install.packages("reshape")
install.packages("BiocManager")
BiocManager::install("GenomicRanges")
install.packages("reshape2")
library(scPagwas)
devtools::document()
system.time(
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
)
##------ Sun Sep  3 10:43:00 2023 ------##
##------ Sun Sep  3 10:43:03 2023 ------##
##------ Sun Sep  3 10:43:15 2023 ------##
##------ Sun Sep  3 10:43:15 2023 ------##
##------ Sun Sep  3 10:43:16 2023 ------##
##------ Sun Sep  3 10:43:16 2023 ------##
##------ Sun Sep  3 10:43:25 2023 ------##
##------ Sun Sep  3 10:43:25 2023 ------##
##------ Sun Sep  3 10:43:27 2023 ------##
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
library(scPagwas)
system.time(
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
)
##------ Fri Sep  8 10:09:42 2023 ------##
##------ Fri Sep  8 10:09:47 2023 ------##
##------ Fri Sep  8 10:10:10 2023 ------##
##------ Fri Sep  8 10:10:10 2023 ------##
##------ Fri Sep  8 10:10:10 2023 ------##
##------ Fri Sep  8 10:10:11 2023 ------##
##------ Fri Sep  8 10:10:40 2023 ------##
##------ Fri Sep  8 10:10:41 2023 ------##
##------ Fri Sep  8 10:10:44 2023 ------##
scPagwas_Visualization(Single_data=Pagwas,
p_thre = 0.05,
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
scPagwas_Visualization(Single_data=Pagwas_data,
p_thre = 0.05,
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
scPagwas_Visualization(Single_data=Pagwas_data,
p_thre = 0.05,
FigureType = "umap",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=Pagwas_data,
var_ident="celltypes",
var_group="positiveCells",
vec_group_colors=c("#E8D0B3","#7EB5A6"),
do_plot = T)
seurat_obj<-Pagwas_data
head(Pagwas_data@meta.data)
plot_bar_positie_nagtive(seurat_obj=Pagwas_data,
var_ident="anno",
var_group="positiveCells",
vec_group_colors=c("#E8D0B3","#7EB5A6"),
do_plot = T)
colnames(Pagwas_data@meta.data)
library(scPagwas)
library(scPagwas)
system.time(
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
)
##------ Fri Sep  8 10:39:24 2023 ------##
##------ Fri Sep  8 10:39:28 2023 ------##
##------ Fri Sep  8 10:39:40 2023 ------##
##------ Fri Sep  8 10:39:40 2023 ------##
##------ Fri Sep  8 10:39:41 2023 ------##
##------ Fri Sep  8 10:39:41 2023 ------##
##------ Fri Sep  8 10:40:08 2023 ------##
##------ Fri Sep  8 10:40:09 2023 ------##
##------ Fri Sep  8 10:40:11 2023 ------##
colnames(Pagwas_data@meta.data)
scPagwas_Visualization(Single_data=Pagwas_data,
p_thre = 0.05,
FigureType = "umap",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=Pagwas_data,
var_ident="anno",
var_group="positiveCells",
vec_group_colors=c("#E8D0B3","#7EB5A6"),
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=Pagwas,
var_ident="positiveCells",
var_group="anno",
p_thre = 0.01,
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=Pagwas_data,
var_ident="positiveCells",
var_group="anno",
p_thre = 0.01,
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
require("RColorBrewer")
require("Seurat")
require("SeuratObject")
require("ggsci")
require("dplyr")
require("ggplot2")
require("ggpubr")
plot_bar_positie_nagtive(seurat_obj=Pagwas_data,
var_ident="positiveCells",
var_group="anno",
p_thre = 0.01,
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
heritability_cor_scatterplot(gene_heri_cor=Pagwas_data@misc$PCC,
topn_genes_label=10,
color_low="#035397",
color_high ="#F32424",
color_mid = "white",
text_size=2,
do_plot=T,
max.overlaps =20,
width = 7,
height = 7)
Bootstrap_P_Barplot(p_results=Pagwas@misc$bootstrap_results$bp_value[-1],
p_names=rownames(Pagwas@misc$bootstrap_results)[-1],
figurenames = "Bootstrap_P_Barplot.pdf",
width = 5,
height = 7,
do_plot=T,
title = "monocytecount_bmmc")
library(scPagwas)
Pagwas <- list()
#Input and preprocess the single-cell data
Single_data <- readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
Pagwas <- scPagwas::Single_data_input(
Pagwas = Pagwas,
assay = "RNA",
Single_data = Single_data,
Pathway_list = Genes_by_pathway_kegg
)
Single_data <- Single_data[, colnames(Pagwas$data_mat)]
#Run svd function
Pagwas <- scPagwas::Pathway_pcascore_run(
Pagwas = Pagwas,
Pathway_list = Genes_by_pathway_kegg
)
Pagwas <- scPagwas::pa_meanexpr(Pagwas)
n=3
an<-ncol(Pagwas$pca_scCell_mat)
m=an/n
m=floor(m)
pca_scCell_mat<-Pagwas$pca_scCell_mat
data_mat<-Pagwas$data_mat
for (i in 1:n) {
if(i*m > an){
Pagwas$pca_scCell_mat=pca_scCell_mat[,((i-1)*m+1):an]
Pagwas$data_mat=data_mat[,((i-1)*m+1):(i*m)]
}else{
Pagwas$pca_scCell_mat=pca_scCell_mat[,((i-1)*m+1):(i*m)]
Pagwas$data_mat=data_mat[,((i-1)*m+1):(i*m)]
}
save(Pagwas,file=paste0(i,"_Pagwas_singledata.RData"))
}
gwasfile= system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas")
out_file= "./gwas_pagwas.RData"
Pagwas<-list()
gwas_data <- bigreadr::fread2(gwasfile)
Pagwas <- scPagwas::GWAS_summary_input(
Pagwas = Pagwas,
gwas_data = gwas_data
)
Pagwas$snp_gene_df <- scPagwas::SnpToGene(gwas_data = Pagwas$gwas_data,
block_annotation = block_annotation,
marg = 10000)
save(Pagwas,file=out_file)
gwas_path <- "gwas_pagwas.RData"
scmat_path <- "1_Pagwas_singledata.RData"
#scmat_path <- "2_Pagwas_singledata.RData"
#Import and integrate the two data results into a single list.
load(gwas_path)
Pagwas1<-Pagwas
rm(Pagwas)
load(scmat_path)
Pagwas<- c(Pagwas1,Pagwas)
output.prefix='1'
#output.prefix='2'
output.dirs='Test'
if (!dir.exists(output.dirs)) {
dir.create(output.dirs)
}
if (!dir.exists(output.dirs)) {
dir.create(paste0("./", output.dirs, "/temp"))
}
Pagwas <- scPagwas::Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
Pagwas <- scPagwas::Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = F,
backingpath=paste0("./", output.dirs, "/temp"),
n.cores=1
)
pmat<-Pagwas$Pathway_sclm_results
save(pmat,file=paste0("./", output.dirs, "/",output.prefix,"_Pathway_sclm_results.RData"))
output.prefix='2'
output.dirs='Test'
if (!dir.exists(output.dirs)) {
dir.create(output.dirs)
}
if (!dir.exists(output.dirs)) {
dir.create(paste0("./", output.dirs, "/temp"))
}
Pagwas <- scPagwas::Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
Pagwas <- scPagwas::Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = F,
backingpath=paste0("./", output.dirs, "/temp"),
n.cores=1
)
Pagwas$gwas_data$chro
Pagwas$gwas_data$chrom
scmat_path <- "2_Pagwas_singledata.RData"
output.prefix='2'
output.dirs='Test'
if (!dir.exists(output.dirs)) {
dir.create(output.dirs)
}
if (!dir.exists(output.dirs)) {
dir.create(paste0("./", output.dirs, "/temp"))
}
Pagwas <- scPagwas::Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
Pagwas <- scPagwas::Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = F,
backingpath=paste0("./", output.dirs, "/temp"),
n.cores=1
)
scmat_path <- "2_Pagwas_singledata.RData"
load(gwas_path)
Pagwas1<-Pagwas
rm(Pagwas)
load(scmat_path)
Pagwas<- c(Pagwas1,Pagwas)
rm(Pagwas1)
output.prefix='2'
output.dirs='Test'
if (!dir.exists(output.dirs)) {
dir.create(output.dirs)
}
if (!dir.exists(output.dirs)) {
dir.create(paste0("./", output.dirs, "/temp"))
}
Pagwas <- scPagwas::Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
Pagwas <- scPagwas::Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = F,
backingpath=paste0("./", output.dirs, "/temp"),
n.cores=1
)
pmat<-Pagwas$Pathway_sclm_results
save(pmat,file=paste0("./", output.dirs, "/",output.prefix,"_Pathway_sclm_results.RData"))
load(paste0("./", output.dirs, "/1_Pathway_sclm_results.RData"))
n=3
pmat_merge<-pmat
for (i in 2:n) {
print(i)
load(paste0("./", output.dirs, "/",i,"_Pathway_sclm_results.RData"))
pmat_merge<-rbind(pmat_merge,pmat)
}
scmat_path <- "3_Pagwas_singledata.RData"
load(gwas_path)
Pagwas1<-Pagwas
rm(Pagwas)
load(scmat_path)
Pagwas<- c(Pagwas1,Pagwas)
output.prefix='3'
output.dirs='Test'
if (!dir.exists(output.dirs)) {
dir.create(output.dirs)
}
if (!dir.exists(output.dirs)) {
dir.create(paste0("./", output.dirs, "/temp"))
}
Pagwas <- scPagwas::Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
Pagwas <- scPagwas::Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = F,
backingpath=paste0("./", output.dirs, "/temp"),
n.cores=1
)
pmat<-Pagwas$Pathway_sclm_results
save(pmat,file=paste0("./", output.dirs, "/",output.prefix,"_Pathway_sclm_results.RData"))
load(paste0("./", output.dirs, "/1_Pathway_sclm_results.RData"))
n=3
pmat_merge<-pmat
for (i in 2:n) {
print(i)
load(paste0("./", output.dirs, "/",i,"_Pathway_sclm_results.RData"))
pmat_merge<-rbind(pmat_merge,pmat)
}
save(pmat_merge,file="pmat_merge.RData")
scPagwas.gPAS.score <- scPagwas::Merge_gPas(Pagwas,pmat_merge)
load("single.pagwas.RData")
load("./single.pagwas.RData")
getwd()
library(scPagwas)
Pagwas <- list()
#Input and preprocess the single-cell data
Single_data <- readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
Pagwas <- scPagwas::Single_data_input(
Pagwas = Pagwas,
assay = "RNA",
Single_data = Single_data,
Pathway_list = Genes_by_pathway_kegg
)
Single_data <- Single_data[, colnames(Pagwas$data_mat)]
#Run svd function
Pagwas <- scPagwas::Pathway_pcascore_run(
Pagwas = Pagwas,
Pathway_list = Genes_by_pathway_kegg
)
Pagwas <- scPagwas::pa_meanexpr(Pagwas)
#save this result
save(Pagwas,file="./single.pagwas.RData")
scPagwas.gPAS.score <- scPagwas::Merge_gPas(Pagwas,pmat_merge)
dim(Pagwas$pca_scCell_mat)
dim(pmat_merge)
m=an/n
m
m=floor(m)
m
m= ceiling(m)
m=an/n
m= ceiling(m)
m
for (i in 1:n) {
if(i*m > an){
Pagwas$pca_scCell_mat=pca_scCell_mat[,((i-1)*m+1):an]
Pagwas$data_mat=data_mat[,((i-1)*m+1):(i*m)]
}else{
Pagwas$pca_scCell_mat=pca_scCell_mat[,((i-1)*m+1):(i*m)]
Pagwas$data_mat=data_mat[,((i-1)*m+1):(i*m)]
}
print( dim(Pagwas$data_mat))
save(Pagwas,file=paste0(i,"_Pagwas_singledata.RData"))
}
for (i in 1:n) {
if(i*m > an){
Pagwas$pca_scCell_mat=pca_scCell_mat[,((i-1)*m+1):an]
Pagwas$data_mat=data_mat[,((i-1)*m+1):(i*m)]
}else{
Pagwas$pca_scCell_mat=pca_scCell_mat[,((i-1)*m+1):nrow(pca_scCell_mat)]
Pagwas$data_mat=data_mat[,((i-1)*m+1):nrow(pca_scCell_mat)]
}
print( dim(Pagwas$data_mat))
save(Pagwas,file=paste0(i,"_Pagwas_singledata.RData"))
}
usethis::use_pkgdown()
pkgdown::build_site()
