?percent
usethis::use_package("scales", "Suggests")
usethis::use_package("ggrepel", "Suggests")
?qnorm
?density
?mooth.spline
??mooth.spline
??predict
?colorRampPalette
usethis::use_package("grDevices", "Suggests")
?brewer.pal
usethis::use_package("RColorBrewer", "Suggests")
??colorRampPalette
??brewer.pal
??VlnPlot
??write.table
??write.csv
??offset
??is
??is
??is(Pagwas_x, "dgCMatrix")
?dgCMatrix::is
install.packages("dgCMatrix")
BiocManager::sparseMatrixStats
BiocManager::install("sparseMatrixStats")
??is
?sparseMatrixStats::is
data(genes.by.gobp.pathway)
library(scPagwas)
data(genes.by.gobp.pathway)
load("E:/RPakage/scPagwas/data/genes.by.gobp.pathway.RData")
ls()
genes.by.gobp.pathway<-genes.by.gpbp.pathway
save(genes.by.gobp.pathway,file = "E:/RPakage/scPagwas/data/genes.by.gobp.pathway.RData")
usethis::use_package("FactoMineR", "Suggests")
usethis::use_package("ggdendro", "Suggests")
usethis::use_package("grImport2", "Suggests")
usethis::use_package("rhdf5", "Suggests")
usethis::use_package("scales", "Suggests")
usethis::use_package("sisal", "Suggests")
usethis::use_package("tidyverse", "Suggests")
renv::snapshot()
devtools::document()
library(scPagwas)
devtools::document()
library(scPagwas)
library(scPagwas)
pkgdown::build_site()
library(scPagwas)
#library(Seurat)
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=F, # Whether to run the singlecell process.
celltype=T,# Whether to run the celltype process.
seruat_return=T,#Whether to return seruat format result.
ncores = 1 ) #The numbers of cores to run.
##------ Tue Jul 19 14:18:06 2022 ------##
##------ Tue Jul 19 14:18:11 2022 ------##
##------ Tue Jul 19 14:18:20 2022 ------##
##------ Tue Jul 19 14:18:20 2022 ------##
##------ Tue Jul 19 14:18:21 2022 ------##
##------ Tue Jul 19 14:18:22 2022 ------##
devtools::load_all(".")
library(scPagwas)
#library(Seurat)
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=F, # Whether to run the singlecell process.
celltype=T,# Whether to run the celltype process.
seruat_return=T,#Whether to return seruat format result.
ncores = 1 ) #The numbers of cores to run.
##------ Tue Jul 19 14:28:28 2022 ------##
##------ Tue Jul 19 14:28:33 2022 ------##
##------ Tue Jul 19 14:28:47 2022 ------##
##------ Tue Jul 19 14:28:47 2022 ------##
##------ Tue Jul 19 14:28:49 2022 ------##
##------ Tue Jul 19 14:28:50 2022 ------##
##------ Tue Jul 19 14:29:00 2022 ------##
devtools::document()
library(scPagwas)
library(scPagwas)
Pagwas <- list()
Single_data <- readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
Pagwas <- Single_data_input(
Pagwas = Pagwas,
assay = "RNA",
Single_data = Single_data,
Pathway_list = Genes_by_pathway_kegg
)
Single_data <- Single_data[, colnames(Pagwas$data_mat)]
names(Pagwas)
Pagwas <- Pathway_pcascore_run(
Pagwas = Pagwas,
Pathway_list = Genes_by_pathway_kegg
)
names(Pagwas)
library(scPagwas)
Pagwas <- list()
Single_data <- readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
Pagwas <- Single_data_input(
Pagwas = Pagwas,
assay = "RNA",
Single_data = Single_data,
Pathway_list = Genes_by_pathway_kegg
)
Single_data <- Single_data[, colnames(Pagwas$data_mat)]
names(Pagwas)
Pagwas <- Pathway_pcascore_run(
Pagwas = Pagwas,
Pathway_list = Genes_by_pathway_kegg
)
names(Pagwas)
gwas_data <- bigreadr::fread2(system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"))
Pagwas <- GWAS_summary_input(
Pagwas = Pagwas,
gwas_data = gwas_data,
maf_filter = 0.1
)
names(Pagwas)
Pagwas$snp_gene_df <- Snp2Gene(snp = Pagwas$gwas_data, refGene = block_annotation, marg = 10000)
Pagwas <- Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
names(Pagwas)
Pagwas$pathway_blocks[1:3]
Pagwas <- Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = T,
ncores = 1
)
Pagwas <- Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = T,
ncores = 1
)
Pagwas <- Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
names(Pagwas)
Pagwas$pathway_blocks[1:3]
Pagwas <- Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = T,
ncores = 1
)
library(scPagwas)
#library(Seurat)
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=F, # Whether to run the singlecell process.
celltype=T,# Whether to run the celltype process.
seruat_return=T,#Whether to return seruat format result.
ncores = 1 ) #The numbers of cores to run.
##------ Tue Jul 19 14:49:19 2022 ------##
##------ Tue Jul 19 14:49:25 2022 ------##
##------ Tue Jul 19 14:49:36 2022 ------##
##------ Tue Jul 19 14:49:36 2022 ------##
##------ Tue Jul 19 14:49:37 2022 ------##
##------ Tue Jul 19 14:49:40 2022 ------##
##------ Tue Jul 19 14:49:48 2022 ------##
library(scPagwas)
Pagwas <- list()
Single_data <- readRDS(system.file("extdata", "scRNAexample.rds", package = "scPagwas"))
Pagwas <- Single_data_input(
Pagwas = Pagwas,
assay = "RNA",
Single_data = Single_data,
Pathway_list = Genes_by_pathway_kegg
)
Single_data <- Single_data[, colnames(Pagwas$data_mat)]
names(Pagwas)
Pagwas <- Pathway_pcascore_run(
Pagwas = Pagwas,
Pathway_list = Genes_by_pathway_kegg
)
names(Pagwas)
gwas_data <- bigreadr::fread2(system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"))
Pagwas <- GWAS_summary_input(
Pagwas = Pagwas,
gwas_data = gwas_data,
maf_filter = 0.1
)
names(Pagwas)
Pagwas$snp_gene_df <- Snp2Gene(snp = Pagwas$gwas_data, refGene = block_annotation, marg = 10000)
Pagwas <- Pathway_annotation_input(
Pagwas = Pagwas,
block_annotation = block_annotation
)
names(Pagwas)
Pagwas$pathway_blocks[1:3]
Pagwas <- Link_pathway_blocks_gwas(
Pagwas = Pagwas,
chrom_ld = chrom_ld,
singlecell = T,
celltype = T,
ncores = 1
)
Pagwas$lm_results <- Pagwas_perform_regression(Pathway_ld_gwas_data = Pagwas$Pathway_ld_gwas_data)
Pagwas <- Boot_evaluate(Pagwas, bootstrap_iters = 200, part = 0.5)
Pagwas$Pathway_ld_gwas_data <- NULL
Pagwas <- scPagwas_perform_score(
Pagwas = Pagwas,
remove_outlier = TRUE
)
names(Pagwas)
Pagwas <- scGet_gene_heritability_correlation(Pagwas = Pagwas)
scPagwas_topgenes <- names(Pagwas$gene_heritability_correlation[order(Pagwas$gene_heritability_correlation, decreasing = T), ])[1:1000]
Single_data <- Seurat::AddModuleScore(Single_data, assay = "RNA", list(scPagwas_topgenes), name = c("scPagwas.TRS.Score"))
#run pvalue
CellScalepValue <- rankPvalue(datS = t(data.matrix(Seurat::GetAssayData(Single_data, assay = "RNA")[scPagwas_topgenes, ])), pValueMethod = "scale")
suppressMessages(require("RColorBrewer"))
suppressMessages(require("Seurat"))
suppressMessages(require("SeuratObject"))
suppressMessages(require("ggsci"))
suppressMessages(require("dplyr"))
suppressMessages(require("ggplot2"))
suppressMessages(require("ggpubr"))
Seurat::DimPlot(Pagwas_singlecell,pt.size=1,reduction="umap",label = T, repel=TRUE)+
umap_theme()+ggtitle("Test")+labs(x="UMAP",y="")+theme(aspect.ratio=1)
library(scPagwas)
Pagwas_celltypes<-scPagwas_main(Pagwas =NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="monocytecount_scPagwas",
output.dirs="monocytecount_bmmc",
Pathway_list=Genes_by_pathway_kegg,
ncores=5,
assay="RNA",
singlecell=F,
celltype=T,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
##------ Tue Jul 19 14:53:44 2022 ------##
##------ Tue Jul 19 14:53:48 2022 ------##
##------ Tue Jul 19 14:53:58 2022 ------##
##------ Tue Jul 19 14:53:58 2022 ------##
##------ Tue Jul 19 14:53:59 2022 ------##
##------ Tue Jul 19 14:54:00 2022 ------##
##------ Tue Jul 19 14:54:09 2022 ------##
Pagwas_singlecell<-scPagwas_main(Pagwas =Pagwas_celltypes,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"),
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),
output.prefix="monocytecount_scPagwas",
output.dirs="monocytecount_bmmc",
seruat_return=T,
Pathway_list=Genes_by_pathway_kegg,
ncores=5,
assay="RNA",
singlecell=T,
celltype=F,
block_annotation = block_annotation,
chrom_ld = chrom_ld)
##------ Tue Jul 19 14:55:27 2022 ------##
##------ Tue Jul 19 14:55:31 2022 ------##
##------ Tue Jul 19 14:55:33 2022 ------##
##------ Tue Jul 19 14:55:33 2022 ------##
##------ Tue Jul 19 14:55:35 2022 ------##
##------ Tue Jul 19 14:55:50 2022 ------##
##------ Tue Jul 19 14:55:55 2022 ------##
suppressMessages(require("RColorBrewer"))
suppressMessages(require("Seurat"))
suppressMessages(require("SeuratObject"))
suppressMessages(require("ggsci"))
suppressMessages(require("dplyr"))
suppressMessages(require("ggplot2"))
suppressMessages(require("ggpubr"))
Seurat::DimPlot(Pagwas_singlecell,pt.size=1,reduction="umap",label = T, repel=TRUE)+
umap_theme()+ggtitle("Test")+labs(x="UMAP",y="")+theme(aspect.ratio=1)
scPagwas_Visualization(Single_data=Pagwas_singlecell,
p_thre = 0.05,
FigureType = "umap",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
devtools::load_all(".")
scPagwas_Visualization(Single_data=Pagwas_singlecell,
p_thre = 0.05,
FigureType = "umap",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=Pagwas_singlecell,
var_ident="anno",
var_group="positiveCells",
vec_group_colors=c("#E8D0B3","#7EB5A6"),
do_plot = T)
plot_bar_positie_nagtive(seurat_obj=Pagwas_singlecell,
var_ident="positiveCells",
var_group="anno",
p_thre = 0.01,
vec_group_colors=NULL,
f_color=colorRampPalette(brewer.pal(n=10, name="RdYlBu")),
do_plot = T)
suppressMessages(library(tidyverse))
suppressMessages(library(rhdf5))
suppressMessages(library(ggplot2))
suppressMessages(library(grDevices))
suppressMessages(library(stats))
suppressMessages(library(FactoMineR))
suppressMessages(library(scales))
suppressMessages(library(reshape2))
suppressMessages(library(ggdendro))
suppressMessages(library(grImport2))
suppressMessages(library(gridExtra))
suppressMessages(library(grid))
suppressMessages(library(sisal))
source(system.file("extdata", "plot_scpathway_contri_dot.R", package = "scPagwas"))
plot_scpathway_dot(Pagwas=Pagwas_singlecell,
celltypes=unique(Idents(Pagwas_singlecell)),
topn_path_celltype=5,
filter_p=0.05,
max_logp=15,
display_max_sizes=F,
size_var ="logrankPvalue" ,
col_var="proportion",
shape.scale = 8,
cols.use=c("lightgrey", "#E45826"),
dend_x_var = "logrankPvalue",
dist_method="euclidean",
hclust_method="ward.D",
do_plot = T,
#figurenames = "Pathway_plot.pdf",
width = 7,
height = 7)
heritability_cor_scatterplot(gene_heri_cor=Pagwas_singlecell@misc$gene_heritability_correlation,
topn_genes_label=10,
color_low="#035397",
color_high ="#F32424",
color_mid = "white",
text_size=2,
do_plot=T,
max.overlaps =20,
width = 7,
height = 7)
suppressMessages(library("ggsci"))
suppressMessages(library("Seurat"))
top5genes<-rownames(Pagwas_singlecell@misc$gene_heritability_correlation)[order(Pagwas_singlecell@misc$gene_heritability_correlation,decreasing = T)[1:5]]
plot_vln_Corgenes(seurat_obj=Pagwas_singlecell,
assay="RNA", slot="data",
var_group="anno",
vec_features=top5genes,
do_plot = T
)
Bootstrap_P_Barplot(p_results=Pagwas_singlecell@misc$bootstrap_results$bp_value[-1],
p_names=rownames(Pagwas_singlecell@misc$bootstrap_results)[-1],
width = 5,
height = 7,
do_plot=T,
title = "Test")
Bootstrap_estimate_Plot(Pagwas=Pagwas_singlecell,
width = 9,
height = 7,
do_plot=T)
devtools::document()
devtools::build()
library(scPagwas)
devtools::build()
devtools::build()
devtools::document()
library(scPagwas)
devtools::build()
?pdf
load(system.file("extdata", "Pagwas_data.RData", package = "scPagwas"))
scGet_gene_heritability_correlation(Pagwas_data)
devtools::document()
renv::snapshot()
devtools::document()
library(scPagwas)
load("E:/RPakage/scPagwas/data/block_annotation.RData")
resaveRdafiles("E:/RPakage/scPagwas/data/block_annotation.RData",compress ="xz")
tools::resaveRdafiles("E:/RPakage/scPagwas/data/block_annotation.RData",compress ="xz")
??resaveRdafiles
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/block_annotation.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/chrom_ld.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/Genes_by_pathway_kegg.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.celltype.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.gobp.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.hallmark.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.immunesigdb.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.immunologic.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.reactome.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.regulatory.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/data/genes.by.tft.pathway.RData",compress ="xz")
tools::resaveRdaFiles(paths="E:/RPakage/scPagwas/inst/extdata/Pagwas_data.RData",compress ="xz")
devtools::document()
devtools::document()
devtools::document()
library(scPagwas)
devtools::build()
devtools::document()
lintr::lint_package()
library(scPagwas)
lintr::lint_package()
styler::style_pkg()
styler::style_pkg()
styler::style_pkg()
lintr::lint_package()
devtools::document()
library(scPagwas)
devtools::document()
library(scPagwas)
devtools::document()
library(scPagwas)
devtools::document()
library(scPagwas)
?devtools::check
devtools::document()
library(scPagwas)
devtools::build_rmd()
pkgdown::build_site()
library(scPagwas)
#library(Seurat)
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=F, # Whether to run the singlecell process.
celltype=T,# Whether to run the celltype process.
seruat_return=T,#Whether to return seruat format result.
ncores = 1 ) #The numbers of cores to run.
##------ Wed Jul 20 14:55:39 2022 ------##
##------ Wed Jul 20 14:55:44 2022 ------##
##------ Wed Jul 20 14:55:52 2022 ------##
##------ Wed Jul 20 14:55:53 2022 ------##
##------ Wed Jul 20 14:55:54 2022 ------##
##------ Wed Jul 20 14:55:55 2022 ------##
##------ Wed Jul 20 14:56:17 2022 ------##
install.packages("SeuratObject")
install.packages("ggpubr")
install.packages("Seurat")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("GenomicRanges")
BiocManager::install("IRanges")
devtools::install_github("dengchunyu/scPagwas",build_vignettes = TRUE)
vignette("scPagwas")
library(scPagwas)
vignette("scPagwas")
devtools::document()
library(scPagwas)
library(scPagwas)
#library(Seurat)
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=F, # Whether to run the singlecell process.
celltype=T,# Whether to run the celltype process.
seruat_return=T,#Whether to return seruat format result.
ncores = 1 ) #The numbers of cores to run.
##------ Fri Jul 22 17:18:52 2022 ------##
##------ Fri Jul 22 17:18:57 2022 ------##
##------ Fri Jul 22 17:19:06 2022 ------##
##------ Fri Jul 22 17:19:06 2022 ------##
##------ Fri Jul 22 17:19:07 2022 ------##
##------ Fri Jul 22 17:19:08 2022 ------##
##------ Fri Jul 22 17:19:29 2022 ------##
usethis::use_version()
warnings()
