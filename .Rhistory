data_mat=Pagwas$data_mat[,la==i],
rawPathway_list=Pagwas$rawPathway_list,
snp_gene_df=Pagwas$snp_gene_df,
n.cores=n.cores )
get_Pathway_sclm<-function(Pathway_ld_gwas_data,pca_scCell_mat,
data_mat,rawPathway_list,
snp_gene_df,
n.cores=1 ){
pb <- txtProgressBar(style = 3)
paths<-names(Pathway_ld_gwas_data)
Pathway_sclm_results <- papply(Pathway_ld_gwas_data, function(pa_block) {
pathway <- unique(pa_block$block_info$pathway)
x <- matrix(pca_scCell_mat[pathway, ],nrow = 1)
rownames(x)<-pathway
if (pa_block$n_snps == 0) {
pa_block$include_in_inference <- F
pa_block$x <- NULL # to make sure we totally replace previous stuffs
return(pa_block)
}
mg <- intersect(rawPathway_list[[pathway]],rownames(data_mat))
if (length(mg) == 1) {
x2<-matrix(data_mat[mg, ],nrow=1)
x2<- x2/(x2+0.0001)
rownames(x2)<-mg
}else{
x2 <-  biganalytics::apply(data_mat[mg, ],2,function(ge){
if (sum(ge) == 0) {
return(rep(0,length(ge)))
}else{
return(ge / sum(ge))
}
})
rownames(x2)<-mg
}
x2 <- as(x2,"dgCMatrix")
if (pa_block$n_snps > 1) {
x2 <-x2[pa_block$snps$label, ]
pa_block$n_snps <- nrow(pa_block$snps)
x <- x[rep(1, pa_block$n_snps), ]
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- x * snp_gene_df[pa_block$snps$rsid, "slope"]
x2 <- x2 * x
} else {
x2 <- matrix(x2[pa_block$snps$label, ], nrow = 1)
rownames(x2) <- pa_block$snps$label
pa_block$n_snps <- nrow(pa_block$snps)
x <- matrix(x[rep(1, pa_block$n_snps), ], nrow = 1)
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- matrix(as.numeric(x) * as.numeric(snp_gene_df[pa_block$snps$rsid, "slope"]), nrow = 1)
x2 <- matrix(as.numeric(x2) * as.numeric(x), nrow = 1)
x2 <- as(x2,"dgCMatrix")
}
pa_block$x<- as(pa_block$ld_matrix_squared %*% x2,"dgCMatrix")
pa_block$include_in_inference <- T
noise_per_snp <- pa_block$snps$se**2
if (!is.null(pa_block$x)) {
if (pa_block$n_snps > 2) {
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(Pagwas_x = pa_block$x[!na_elements,],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
n.cores = n.cores
)
results[is.na(results)] <- 0
#Pathway_cell_regression<-results
}else{
results<-NULL
}
} else {
results<-NULL
}
setTxtProgressBar(pb, which(paths == pathway) / length(paths))
return(results)
}, n.cores = n.cores)
close(pb)
return(Pathway_sclm_results)
}
la<-gl(split_n,a/split_n,length=a)
la
la<-gl(split_n,a/split_n,length=a)
Pathway_sclm_results <- tapply(1:a, la, function(i){
#for(i in 1:split_n){
Pathway_sclm_result <- get_Pathway_sclm(Pathway_ld_gwas_data=Pagwas$Pathway_ld_gwas_data,
pca_scCell_mat=Pagwas$pca_scCell_mat[,i],
data_mat=Pagwas$data_mat[,i],
rawPathway_list=Pagwas$rawPathway_list,
snp_gene_df=Pagwas$snp_gene_df,
n.cores=n.cores )
return(Pathway_sclm_result)
})
Pathway_sclm_results[[1]]
length(Pathway_sclm_results[[1]])
pb <- txtProgressBar(style = 3)
paths<-names(Pathway_ld_gwas_data)
Pathway_sclm_results <- papply(Pathway_ld_gwas_data, function(pa_block) {
pathway <- unique(pa_block$block_info$pathway)
x <- matrix(pca_scCell_mat[pathway, ],nrow = 1)
rownames(x)<-pathway
if (pa_block$n_snps == 0) {
pa_block$include_in_inference <- F
pa_block$x <- NULL # to make sure we totally replace previous stuffs
return(pa_block)
}
mg <- intersect(rawPathway_list[[pathway]],rownames(data_mat))
if (length(mg) == 1) {
x2<-matrix(data_mat[mg, ],nrow=1)
x2<- x2/(x2+0.0001)
rownames(x2)<-mg
}else{
x2 <-  biganalytics::apply(data_mat[mg, ],2,function(ge){
if (sum(ge) == 0) {
return(rep(0,length(ge)))
}else{
return(ge / sum(ge))
}
})
rownames(x2)<-mg
}
x2 <- as(x2,"dgCMatrix")
if (pa_block$n_snps > 1) {
x2 <-x2[pa_block$snps$label, ]
pa_block$n_snps <- nrow(pa_block$snps)
x <- x[rep(1, pa_block$n_snps), ]
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- x * snp_gene_df[pa_block$snps$rsid, "slope"]
x2 <- x2 * x
} else {
x2 <- matrix(x2[pa_block$snps$label, ], nrow = 1)
rownames(x2) <- pa_block$snps$label
pa_block$n_snps <- nrow(pa_block$snps)
x <- matrix(x[rep(1, pa_block$n_snps), ], nrow = 1)
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- matrix(as.numeric(x) * as.numeric(snp_gene_df[pa_block$snps$rsid, "slope"]), nrow = 1)
x2 <- matrix(as.numeric(x2) * as.numeric(x), nrow = 1)
x2 <- as(x2,"dgCMatrix")
}
pa_block$x<- as(pa_block$ld_matrix_squared %*% x2,"dgCMatrix")
pa_block$include_in_inference <- T
noise_per_snp <- pa_block$snps$se**2
if (!is.null(pa_block$x)) {
if (pa_block$n_snps > 2) {
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(Pagwas_x = pa_block$x[!na_elements,],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
n.cores = n.cores
)
results[is.na(results)] <- 0
#Pathway_cell_regression<-results
}else{
results<-NULL
}
} else {
results<-NULL
}
setTxtProgressBar(pb, which(paths == pathway) / length(paths))
return(results)
}, n.cores = n.cores)
close(pb)
names(Pathway_sclm_results) <- paths
Pathway_sclm_results <- Pathway_sclm_results[!sapply(Pathway_sclm_results, is.null)]
paths <- names(Pathway_sclm_results)
dim(Pathway_sclm_results)
Pathway_sclm_results<-data.matrix(Pathway_sclm_results)
dim(Pathway_sclm_results)
head(Pathway_sclm_results)
pb <- txtProgressBar(style = 3)
paths<-names(Pathway_ld_gwas_data)
Pathway_sclm_results <- papply(Pathway_ld_gwas_data, function(pa_block) {
pathway <- unique(pa_block$block_info$pathway)
x <- matrix(pca_scCell_mat[pathway, ],nrow = 1)
rownames(x)<-pathway
if (pa_block$n_snps == 0) {
pa_block$include_in_inference <- F
pa_block$x <- NULL # to make sure we totally replace previous stuffs
return(pa_block)
}
mg <- intersect(rawPathway_list[[pathway]],rownames(data_mat))
if (length(mg) == 1) {
x2<-matrix(data_mat[mg, ],nrow=1)
x2<- x2/(x2+0.0001)
rownames(x2)<-mg
}else{
x2 <-  biganalytics::apply(data_mat[mg, ],2,function(ge){
if (sum(ge) == 0) {
return(rep(0,length(ge)))
}else{
return(ge / sum(ge))
}
})
rownames(x2)<-mg
}
x2 <- as(x2,"dgCMatrix")
if (pa_block$n_snps > 1) {
x2 <-x2[pa_block$snps$label, ]
pa_block$n_snps <- nrow(pa_block$snps)
x <- x[rep(1, pa_block$n_snps), ]
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- x * snp_gene_df[pa_block$snps$rsid, "slope"]
x2 <- x2 * x
} else {
x2 <- matrix(x2[pa_block$snps$label, ], nrow = 1)
rownames(x2) <- pa_block$snps$label
pa_block$n_snps <- nrow(pa_block$snps)
x <- matrix(x[rep(1, pa_block$n_snps), ], nrow = 1)
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- matrix(as.numeric(x) * as.numeric(snp_gene_df[pa_block$snps$rsid, "slope"]), nrow = 1)
x2 <- matrix(as.numeric(x2) * as.numeric(x), nrow = 1)
x2 <- as(x2,"dgCMatrix")
}
pa_block$x<- as(pa_block$ld_matrix_squared %*% x2,"dgCMatrix")
pa_block$include_in_inference <- T
noise_per_snp <- pa_block$snps$se**2
if (!is.null(pa_block$x)) {
if (pa_block$n_snps > 2) {
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(Pagwas_x = pa_block$x[!na_elements,],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
n.cores = n.cores
)
results[is.na(results)] <- 0
#Pathway_cell_regression<-results
}else{
results<-NULL
}
} else {
results<-NULL
}
setTxtProgressBar(pb, which(paths == pathway) / length(paths))
return(results)
}, n.cores = n.cores)
close(pb)
names(Pathway_sclm_results) <- paths
Pathway_sclm_results <- Pathway_sclm_results[!sapply(Pathway_sclm_results, is.null)]
Pathway_sclm_results <- data.matrix(as.data.frame(Pathway_sclm_results))
dim(Pathway_sclm_results)
get_Pathway_sclm<-function(Pathway_ld_gwas_data,pca_scCell_mat,
data_mat,rawPathway_list,
snp_gene_df,
n.cores=1 ){
pb <- txtProgressBar(style = 3)
paths<-names(Pathway_ld_gwas_data)
Pathway_sclm_results <- papply(Pathway_ld_gwas_data, function(pa_block) {
pathway <- unique(pa_block$block_info$pathway)
x <- matrix(pca_scCell_mat[pathway, ],nrow = 1)
rownames(x)<-pathway
if (pa_block$n_snps == 0) {
pa_block$include_in_inference <- F
pa_block$x <- NULL # to make sure we totally replace previous stuffs
return(pa_block)
}
mg <- intersect(rawPathway_list[[pathway]],rownames(data_mat))
if (length(mg) == 1) {
x2<-matrix(data_mat[mg, ],nrow=1)
x2<- x2/(x2+0.0001)
rownames(x2)<-mg
}else{
x2 <-  biganalytics::apply(data_mat[mg, ],2,function(ge){
if (sum(ge) == 0) {
return(rep(0,length(ge)))
}else{
return(ge / sum(ge))
}
})
rownames(x2)<-mg
}
x2 <- as(x2,"dgCMatrix")
if (pa_block$n_snps > 1) {
x2 <-x2[pa_block$snps$label, ]
pa_block$n_snps <- nrow(pa_block$snps)
x <- x[rep(1, pa_block$n_snps), ]
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- x * snp_gene_df[pa_block$snps$rsid, "slope"]
x2 <- x2 * x
} else {
x2 <- matrix(x2[pa_block$snps$label, ], nrow = 1)
rownames(x2) <- pa_block$snps$label
pa_block$n_snps <- nrow(pa_block$snps)
x <- matrix(x[rep(1, pa_block$n_snps), ], nrow = 1)
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- matrix(as.numeric(x) * as.numeric(snp_gene_df[pa_block$snps$rsid, "slope"]), nrow = 1)
x2 <- matrix(as.numeric(x2) * as.numeric(x), nrow = 1)
x2 <- as(x2,"dgCMatrix")
}
pa_block$x<- as(pa_block$ld_matrix_squared %*% x2,"dgCMatrix")
pa_block$include_in_inference <- T
noise_per_snp <- pa_block$snps$se**2
if (!is.null(pa_block$x)) {
if (pa_block$n_snps > 2) {
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(Pagwas_x = pa_block$x[!na_elements,],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
n.cores = n.cores
)
results[is.na(results)] <- 0
#Pathway_cell_regression<-results
}else{
results<-NULL
}
} else {
results<-NULL
}
setTxtProgressBar(pb, which(paths == pathway) / length(paths))
return(results)
}, n.cores = n.cores)
close(pb)
names(Pathway_sclm_results) <- paths
Pathway_sclm_results <- Pathway_sclm_results[!sapply(Pathway_sclm_results, is.null)]
Pathway_sclm_results <- data.matrix(as.data.frame(Pathway_sclm_results))
return(Pathway_sclm_results)
}
Pathway_sclm_results <- tapply(1:a, la, function(i){
Pathway_sclm_result <- get_Pathway_sclm(Pathway_ld_gwas_data=Pagwas$Pathway_ld_gwas_data,
pca_scCell_mat=Pagwas$pca_scCell_mat[,i],
data_mat=Pagwas$data_mat[,i],
rawPathway_list=Pagwas$rawPathway_list,
snp_gene_df=Pagwas$snp_gene_df,
n.cores=n.cores )
return(Pathway_sclm_result)
})
Pathway_sclm_results[[1]]
dim(Pathway_sclm_results[[1]])
pb <- txtProgressBar(style = 3)
paths<-names(Pathway_ld_gwas_data)
Pathway_sclm_results <- papply(Pathway_ld_gwas_data, function(pa_block) {
pathway <- unique(pa_block$block_info$pathway)
x <- matrix(pca_scCell_mat[pathway, ],nrow = 1)
rownames(x)<-pathway
if (pa_block$n_snps == 0) {
pa_block$include_in_inference <- F
pa_block$x <- NULL # to make sure we totally replace previous stuffs
return(pa_block)
}
mg <- intersect(rawPathway_list[[pathway]],rownames(data_mat))
if (length(mg) == 1) {
x2<-matrix(data_mat[mg, ],nrow=1)
x2<- x2/(x2+0.0001)
rownames(x2)<-mg
}else{
x2 <-  biganalytics::apply(data_mat[mg, ],2,function(ge){
if (sum(ge) == 0) {
return(rep(0,length(ge)))
}else{
return(ge / sum(ge))
}
})
rownames(x2)<-mg
}
x2 <- as(x2,"dgCMatrix")
if (pa_block$n_snps > 1) {
x2 <-x2[pa_block$snps$label, ]
pa_block$n_snps <- nrow(pa_block$snps)
x <- x[rep(1, pa_block$n_snps), ]
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- x * snp_gene_df[pa_block$snps$rsid, "slope"]
x2 <- x2 * x
} else {
x2 <- matrix(x2[pa_block$snps$label, ], nrow = 1)
rownames(x2) <- pa_block$snps$label
pa_block$n_snps <- nrow(pa_block$snps)
x <- matrix(x[rep(1, pa_block$n_snps), ], nrow = 1)
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- matrix(as.numeric(x) * as.numeric(snp_gene_df[pa_block$snps$rsid, "slope"]), nrow = 1)
x2 <- matrix(as.numeric(x2) * as.numeric(x), nrow = 1)
x2 <- as(x2,"dgCMatrix")
}
pa_block$x<- as(pa_block$ld_matrix_squared %*% x2,"dgCMatrix")
pa_block$include_in_inference <- T
noise_per_snp <- pa_block$snps$se**2
if (!is.null(pa_block$x)) {
if (pa_block$n_snps > 2) {
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(Pagwas_x = pa_block$x[!na_elements,],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
n.cores = n.cores
)
results[is.na(results)] <- 0
#Pathway_cell_regression<-results
}else{
results<-NULL
}
} else {
results<-NULL
}
setTxtProgressBar(pb, which(paths == pathway) / length(paths))
return(results)
}, n.cores = n.cores)
close(pb)
names(Pathway_sclm_results) <- paths
Pathway_sclm_results <- Pathway_sclm_results[!sapply(Pathway_sclm_results, is.null)]
Pathway_sclm_results <- data.matrix(as.data.frame(Pathway_sclm_results))
dim(Pathway_sclm_results)
dim(pca_scCell_mat)
get_Pathway_sclm<-function(Pathway_ld_gwas_data,pca_scCell_mat,
data_mat,rawPathway_list,
snp_gene_df,
n.cores=1 ){
pb <- txtProgressBar(style = 3)
paths<-names(Pathway_ld_gwas_data)
Pathway_sclm_results <- papply(Pathway_ld_gwas_data, function(pa_block) {
pathway <- unique(pa_block$block_info$pathway)
x <- matrix(pca_scCell_mat[pathway, ],nrow = 1)
rownames(x)<-pathway
if (pa_block$n_snps == 0) {
pa_block$include_in_inference <- F
pa_block$x <- NULL # to make sure we totally replace previous stuffs
return(pa_block)
}
mg <- intersect(rawPathway_list[[pathway]],rownames(data_mat))
if (length(mg) == 1) {
x2<-matrix(data_mat[mg, ],nrow=1)
x2<- x2/(x2+0.0001)
rownames(x2)<-mg
}else{
x2 <-  biganalytics::apply(data_mat[mg, ],2,function(ge){
if (sum(ge) == 0) {
return(rep(0,length(ge)))
}else{
return(ge / sum(ge))
}
})
rownames(x2)<-mg
}
x2 <- as(x2,"dgCMatrix")
if (pa_block$n_snps > 1) {
x2 <-x2[pa_block$snps$label, ]
pa_block$n_snps <- nrow(pa_block$snps)
x <- x[rep(1, pa_block$n_snps), ]
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- x * snp_gene_df[pa_block$snps$rsid, "slope"]
x2 <- x2 * x
} else {
x2 <- matrix(x2[pa_block$snps$label, ], nrow = 1)
rownames(x2) <- pa_block$snps$label
pa_block$n_snps <- nrow(pa_block$snps)
x <- matrix(x[rep(1, pa_block$n_snps), ], nrow = 1)
rownames(x) <- pa_block$snps$rsid
rownames(snp_gene_df) <- snp_gene_df$rsid
x <- matrix(as.numeric(x) * as.numeric(snp_gene_df[pa_block$snps$rsid, "slope"]), nrow = 1)
x2 <- matrix(as.numeric(x2) * as.numeric(x), nrow = 1)
x2 <- as(x2,"dgCMatrix")
}
pa_block$x<- as(pa_block$ld_matrix_squared %*% x2,"dgCMatrix")
pa_block$include_in_inference <- T
noise_per_snp <- pa_block$snps$se**2
if (!is.null(pa_block$x)) {
if (pa_block$n_snps > 2) {
na_elements <- is.na(pa_block$y) | apply(pa_block$x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
results <- scParameter_regression(Pagwas_x = pa_block$x[!na_elements,],
Pagwas_y = pa_block$y[!na_elements],
noise_per_snp = noise_per_snp[!na_elements],
n.cores = n.cores
)
results[is.na(results)] <- 0
#Pathway_cell_regression<-results
}else{
results<-NULL
}
} else {
results<-NULL
}
setTxtProgressBar(pb, which(paths == pathway) / length(paths))
return(results)
}, n.cores = n.cores)
close(pb)
names(Pathway_sclm_results) <- paths
Pathway_sclm_results <- Pathway_sclm_results[!sapply(Pathway_sclm_results, is.null)]
Pathway_sclm_results <- data.matrix(as.data.frame(Pathway_sclm_results))
rownames(Pathway_sclm_results)<-colnames(pca_scCell_mat)
return(Pathway_sclm_results)
}
Pathway_sclm_results <- tapply(1:a, la, function(i){
Pathway_sclm_result <- get_Pathway_sclm(Pathway_ld_gwas_data=Pagwas$Pathway_ld_gwas_data,
pca_scCell_mat=Pagwas$pca_scCell_mat[,i],
data_mat=Pagwas$data_mat[,i],
rawPathway_list=Pagwas$rawPathway_list,
snp_gene_df=Pagwas$snp_gene_df,
n.cores=n.cores )
return(Pathway_sclm_result)
})
dim(Pathway_sclm_results[[1]])
dim(Pathway_sclm_results[[2]])
dim(Pathway_sclm_results[[3]])
dim(Pathway_sclm_results[[4]])
Pathway_sclm_results <-Reduce(function(dtf1, dtf2) rbind(dtf1, dtf2),Pathway_sclm_results)
dim(Pathway_sclm_results)
