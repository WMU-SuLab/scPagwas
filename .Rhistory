na_elements <- is.na(y) | apply(x, 1, function(x) {
any(is.na(x))
}) | is.na(noise_per_snp)
return(list(
y = y[!na_elements], x = x[!na_elements, ],
noise_per_snp = noise_per_snp[!na_elements]
))
}
Pagwas <- scPagwas_perform_regression(Pagwas)
devtools::document()
library(Seurat)
library(scPagwas)
library("dplyr")
library("data.table")
library("Matrix")
library(stringr)
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
# scRNAexample@meta.data$anno[which(scRNAexample@meta.data$anno=="Celltype4")]<-"Effector CD8+T cell"
Idents(scRNAexample)<-scRNAexample@meta.data$anno
#LD data
data(chrom_ld)
Pagwas<-Pagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Wed Mar 16 10:56:32 2022 ------##
##------ Wed Mar 16 10:56:32 2022 ------##
##------ Wed Mar 16 10:56:41 2022 ------##
##------ Wed Mar 16 10:56:57 2022 ------##
##------ Wed Mar 16 10:56:58 2022 ------##
##------ Wed Mar 16 10:57:00 2022 ------##
##------ Wed Mar 16 10:57:10 2022 ------##
##------ Wed Mar 16 10:57:12 2022 ------##
scPagwas<- scPagwas_main(Pagwas = Pagwas)
##------ Wed Mar 16 11:18:42 2022 ------##
##------ Wed Mar 16 11:18:42 2022 ------##
##------ Wed Mar 16 11:18:42 2022 ------##
##------ Wed Mar 16 11:18:42 2022 ------##
##------ Wed Mar 16 11:18:42 2022 ------##
##------ Wed Mar 16 11:18:42 2022 ------##
names(Pagwas)
scPagwas<- scPagwas_main(Pagwas = Pagwas,
gwas_data = NULL,
eqtls_files=NULL,
block_annotation = NULL,
Single_data = NULL,
Pathway_list=NULL,
chrom_ld = NULL)
##------ Wed Mar 16 11:22:38 2022 ------##
##------ Wed Mar 16 11:22:38 2022 ------##
##------ Wed Mar 16 11:22:38 2022 ------##
##------ Wed Mar 16 11:22:38 2022 ------##
##------ Wed Mar 16 11:22:38 2022 ------##
##------ Wed Mar 16 11:22:38 2022 ------##
chrom_ld
names(Pagwas)
names(Pagwas) %in% c("VariableFeatures", "lm_results", "Pathway_block_heritability", "bootstrap_results")
names(Pagwas)
scPagwas_main <- function(Pagwas = NULL,
gwas_data = NULL,
add_eqtls="OnlyTSS",
eqtls_files=NULL,
eqtls_cols=c("rs_id_dbSNP151_GRCh38p7","variant_pos","tss_distance","gene_chr", "gene_start", "gene_end","gene_name","pval_beta"),
eqtl_p=0.05,
block_annotation = NULL,
Single_data = NULL,
FilterSingleCell=FALSE,
nfeatures =NULL,
Pathway_list=NULL,
chrom_ld = NULL,
marg=10000,
maf_filter = 0.01,
min.reads = 5,
min.detected = 1,
min.lib.size = 200,
min_clustercells=10,
min.pathway.size=5,
max.pathway.size=300,
n_folds = 10,
n.cores=1,
regression=TRUE,
split_n=NULL,
remove_outlier=TRUE,
scPagwasSession="scPagwasSession") {
if (is.null(Pagwas)){
Pagwas <- list();
class(Pagwas) <- 'Pagwas'
#1.gwas summary data input
Sys.setenv(R_LOCAL_CACHE=scPagwasSession)
SOAR::Store(gwas_data)
SOAR::Store(block_annotation)
SOAR::Store(Single_data)
SOAR::Store(Pathway_list)
SOAR::Store(chrom_ld)
message(paste(utils::timestamp(quiet = T), ' ******* 1st: GWAS_summary_input function start! ********',sep = ''))
if (!is.null(gwas_data)){
Pagwas <- GWAS_summary_input(Pagwas=Pagwas,
gwas_data=gwas_data,
maf_filter=maf_filter)
}
message('done!')
#2.single data input
message(paste(utils::timestamp(quiet = T), ' ******* 2nd: Single_data_input function start! ********',sep = ''))
#suppressMessages(require(SeuratObject))
if (!is.null(Single_data)){
Pagwas <- Single_data_input(Pagwas=Pagwas,
nfeatures =nfeatures,
Single_data=Single_data,
FilterSingleCell=FilterSingleCell,
min.lib.size = min.lib.size,
min.reads =min.reads,
min.detected =min.detected,
min_clustercells=min_clustercells)
}
message(ncol(Single_data)," cells are remain!" )
message('done!')
#3.calculated pca score
message(paste(utils::timestamp(quiet = T), ' ******* 3rd: Pathway_pcascore_run function start!! ********',sep = ''))
if (!is.null(Pathway_list)){
Pagwas <- Pathway_pcascore_run(Pagwas=Pagwas,n.cores=n.cores,
Pathway_list=Pathway_list,
min.pathway.size=min.pathway.size,
max.pathway.size=max.pathway.size
)
}
message('done!')
#4.calculated Snp2Gene
message(paste(utils::timestamp(quiet = T), ' ******* 4th: Snp2Gene start!! ********',sep = ''))
if(!is.null(block_annotation)){
if(add_eqtls!="OnlyTSS"){
if (!is.null(eqtls_files)){
message("Filter snps for significant eqtls!")
Pagwas<-  Tissue_eqtls_Input(Pagwas=Pagwas,
block_annotation=block_annotation,
add_eqtls=add_eqtls,
eqtls_files=eqtls_files,
eqtl_p=0.05,
eqtls_cols=eqtls_cols,
marg=marg)
#add the eqtls genes' snp
message(nrow(gwas_data)," snps for significant eqtls! Please set 'add_eqtls=F' if the amount of snps were too little!")
}else{
stop("Since the add_eqtls is TURE! No parameter 'eqtls_files' Input!  ")
}
}else{
#SOAR::Store(block_annotation)
snp_gene_df<-Snp2Gene(snp=gwas_data,refGene=block_annotation,marg=marg)
snp_gene_df$slope <- rep(1,nrow(snp_gene_df))
snp_gene_df <- snp_gene_df[snp_gene_df$Disstance=="0",]
SOAR::Store(snp_gene_df)
#SOAR::Store(block_annotation)
}
}
#3.pathway block data
message(paste(utils::timestamp(quiet = T), ' ******* 5th: Pathway_annotation_input function start! ********',sep = ''))
if (!is.null(block_annotation)){
Pagwas <- Pathway_annotation_input(Pagwas=Pagwas,n.cores=n.cores)
}
message('done!')
#4.ld data folder,which is preprogress
message(paste(utils::timestamp(quiet = T), ' ******* 6th: Link_pathway_blocks_gwas function start! ********',sep = ''))
if (!is.null(chrom_ld)){
Pagwas <- Link_pathway_blocks_gwas(Pagwas=Pagwas,
chrom_ld=chrom_ld,
n.cores=n.cores)
message('done!')
}
message(paste(utils::timestamp(quiet = T), ' ******* 7th: link_scCell_pwpca_block function start!! ********',sep = ''))
Pagwas <- link_scCell_pwpca_block(Pagwas,n.cores=n.cores)
message('done!')
message(paste(utils::timestamp(quiet = T), ' ******* 8th: scPagwas_perform_score function start!! ********',sep = ''))
Pagwas <- scPagwas_perform_score(Pagwas,
n.cores=n.cores,
split_n=split_n,
remove_outlier=remove_outlier)
message('done!')
if(regression){
message(paste(utils::timestamp(quiet = T), ' ******* 9th:scPagwas_perform_regression function start!! ********',sep = ''))
Pagwas <- scPagwas_perform_regression(Pagwas, n.cores=n.cores)
message('done!')
}
}else if(sum(names(Pagwas) %in% c("VariableFeatures", "lm_results", "Pathway_block_heritability", "bootstrap_results"))==4){
message(paste(utils::timestamp(quiet = T), ' ******* 7th: link_scCell_pwpca_block function start!! ********',sep = ''))
Pagwas <- link_scCell_pwpca_block(Pagwas,n.cores=n.cores)
message('done!')
message(paste(utils::timestamp(quiet = T), ' ******* 8th: scPagwas_perform_score function start!! ********',sep = ''))
Pagwas <- scPagwas_perform_score(Pagwas,
n.cores=n.cores,
split_n=split_n,
remove_outlier=remove_outlier)
message('done!')
if(regression){
message(paste(utils::timestamp(quiet = T), ' ******* 9th:scPagwas_perform_regression function start!! ********',sep = ''))
Pagwas <- scPagwas_perform_regression(Pagwas, n.cores=n.cores)
message('done!')
}
}
return(Pagwas)
}
scPagwas<- scPagwas_main(Pagwas = Pagwas,
gwas_data = NULL,
eqtls_files=NULL,
block_annotation = NULL,
Single_data = NULL,
Pathway_list=NULL,
chrom_ld = NULL)
##------ Wed Mar 16 11:30:08 2022 ------##
scPagwas<- scPagwas_main(Pagwas = Pagwas)
##------ Wed Mar 16 11:30:20 2022 ------##
scPagwas_main <- function(Pagwas = NULL,
gwas_data = NULL,
add_eqtls="OnlyTSS",
eqtls_files=NULL,
eqtls_cols=c("rs_id_dbSNP151_GRCh38p7","variant_pos","tss_distance","gene_chr", "gene_start", "gene_end","gene_name","pval_beta"),
block_annotation = NULL,
Single_data = NULL,
FilterSingleCell=FALSE,
nfeatures =NULL,
Pathway_list=NULL,
chrom_ld=NULL,
marg=10000,
maf_filter = 0.01,
min.reads = 5,
min.detected = 1,
min.lib.size = 200,
min_clustercells=10,
min.pathway.size=5,
max.pathway.size=300,
n.cores=1,
scPagwasSession="scPagwasSession",
...) {
if (is.null(Pagwas)) {
Pagwas <- list();
class(Pagwas) <- 'Pagwas'
}
#1.gwas summary data input
Sys.setenv(R_LOCAL_CACHE=scPagwasSession)
SOAR::Store(gwas_data)
SOAR::Store(block_annotation)
SOAR::Store(Single_data)
SOAR::Store(Pathway_list)
SOAR::Store(chrom_ld)
message(paste(utils::timestamp(quiet = T), ' ******* 1st: GWAS_summary_input function start! ********',sep = ''))
if (!is.null(gwas_data)){
Pagwas <- GWAS_summary_input(Pagwas=Pagwas,
gwas_data=gwas_data,
maf_filter=maf_filter)
}
message('done!')
#2.single data input
message(paste(utils::timestamp(quiet = T), ' ******* 2nd: Single_data_input function start! ********',sep = ''))
#suppressMessages(require(SeuratObject))
if (!is.null(Single_data)){
Pagwas <- Single_data_input(Pagwas=Pagwas,
nfeatures =nfeatures,
Single_data=Single_data,
FilterSingleCell=FilterSingleCell,
min.lib.size = min.lib.size,
min.reads =min.reads,
min.detected =min.detected,
min_clustercells=min_clustercells)
}
message(ncol(Single_data)," cells are remain!" )
message('done!')
#3.calculated pca score
message(paste(utils::timestamp(quiet = T), ' ******* 3rd: Pathway_pcascore_run function start!! ********',sep = ''))
if (!is.null(Pathway_list)){
Pagwas <- Pathway_pcascore_run(Pagwas=Pagwas,n.cores=n.cores,
Pathway_list=Pathway_list,
min.pathway.size=min.pathway.size,
max.pathway.size=max.pathway.size
)
}
message('done!')
#4.calculated Snp2Gene
message(paste(utils::timestamp(quiet = T), ' ******* 4th: Snp2Gene start!! ********',sep = ''))
if(!is.null(block_annotation)){
#Pagwas$block_annotation<-block_annotation
if(add_eqtls!="OnlyTSS"){
if (!is.null(eqtls_files)){
message("Filter snps for significant eqtls!")
Pagwas<-  Tissue_eqtls_Input(Pagwas=Pagwas,
block_annotation=block_annotation,
add_eqtls=add_eqtls,
eqtls_files=eqtls_files,
eqtl_p=0.05,
eqtls_cols=eqtls_cols,
marg=marg)
#message(nrow(gwas_data)," snps for significant eqtls! Please set 'add_eqtls=F' if the amount of snps were too little!")
}else{
stop("Since the add_eqtls is TURE! No parameter 'eqtls_files' Input!  ")
}
}else{
#SOAR::Store(block_annotation)
snp_gene_df<-Snp2Gene(snp=gwas_data,refGene=block_annotation,marg=marg)
snp_gene_df$slope <- rep(1,nrow(snp_gene_df))
snp_gene_df <- snp_gene_df[snp_gene_df$Disstance=="0",]
#SOAR::Store(gwas_data)
SOAR::Store(snp_gene_df)
#SOAR::Store(block_annotation)
}
}
#3.pathway block data
message(paste(utils::timestamp(quiet = T), ' ******* 5th: Pathway_annotation_input function start! ********',sep = ''))
if (!is.null(block_annotation)){
Pagwas <- Pathway_annotation_input(Pagwas=Pagwas,n.cores=n.cores)
}
message('done!')
#4.ld data folder,which is preprogress
message(paste(utils::timestamp(quiet = T), ' ******* 6th: Link_pathway_blocks_gwas function start! ********',sep = ''))
if (!is.null(chrom_ld)){
Pagwas <- Link_pathway_blocks_gwas(Pagwas=Pagwas,
chrom_ld=chrom_ld,
n.cores=n.cores)
message('done!')
}
return(Pagwas)
}
library(Seurat)
library(scPagwas)
library("dplyr")
library("data.table")
library("Matrix")
library(stringr)
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
# scRNAexample@meta.data$anno[which(scRNAexample@meta.data$anno=="Celltype4")]<-"Effector CD8+T cell"
Idents(scRNAexample)<-scRNAexample@meta.data$anno
#LD data
data(chrom_ld)
Sys.setenv(R_LOCAL_CACHE="scPagwasSession")
#Pagwas_main is a function wrapper other process codes
Pagwas<-scPagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld)
##------ Wed Mar 16 11:40:26 2022 ------##
##------ Wed Mar 16 11:40:27 2022 ------##
##------ Wed Mar 16 11:40:33 2022 ------##
##------ Wed Mar 16 11:40:51 2022 ------##
##------ Wed Mar 16 11:40:52 2022 ------##
##------ Wed Mar 16 11:40:54 2022 ------##
Pagwas <- link_pwpca_block(Pagwas)
Pagwas <- Pagwas_perform_regression(Pagwas, iters = 200,n.cores=1)
Bootstrap_P_Barplot(Pagwas=Pagwas,title = "Test scPagwas")
Bootstrap_estimate_Plot(Pagwas=Pagwas,figurenames = NULL)
Pagwas <- link_scCell_pwpca_block(Pagwas,n.cores=n.cores)
Pagwas <- link_scCell_pwpca_block(Pagwas,n.cores=1)
Pagwas <- scPagwas_perform_score(Pagwas)
scPagwas_Visualization(scPagwas_score = Pagwas$scPagwas_score,
Single_data = scRNAexample,
Reduction = TRUE,
assay = "SCT",
cellpercent = 0.1,
filename = "scPagwas_testFigure",
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "#FFBC80", highColor = "#FC4F4F",
size = 1,
title = "scPagwas_score")
Pagwas <- scPagwas_perform_regression(Pagwas, n.cores=n.cores)
Pagwas <- scPagwas_perform_regression(Pagwas)
devtools::document()
devtools::document()
library(Seurat)
library(scPagwas)
library("dplyr")
library("data.table")
library("Matrix")
library(stringr)
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
# scRNAexample@meta.data$anno[which(scRNAexample@meta.data$anno=="Celltype4")]<-"Effector CD8+T cell"
Idents(scRNAexample)<-scRNAexample@meta.data$anno
#LD data
data(chrom_ld)
Sys.setenv(R_LOCAL_CACHE="scPagwasSession")
#Pagwas_main is a function wrapper other process codes
Pagwas<-scPagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
scPagwasSession="scPagwasSession")
##------ Wed Mar 16 13:13:50 2022 ------##
##------ Wed Mar 16 13:13:52 2022 ------##
##------ Wed Mar 16 13:13:58 2022 ------##
##------ Wed Mar 16 13:14:17 2022 ------##
##------ Wed Mar 16 13:14:18 2022 ------##
##------ Wed Mar 16 13:14:19 2022 ------##
str(Pagwas)
names(devtools::document())
names(Pagwas)
names(devtools::document())
library(Seurat)
library(scPagwas)
library("dplyr")
library("data.table")
library("Matrix")
library(stringr)
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
Idents(scRNAexample)<-scRNAexample@meta.data$anno
#LD data
data(chrom_ld)
Sys.setenv(R_LOCAL_CACHE="scPagwasSession")
Pagwas<-scPagwas_main(Pagwas = NULL,
gwas_data = GWAS_summ_example,
add_eqtls="OnlyTSS",
block_annotation = gtf_df,
Single_data = scRNAexample,
FilterSingleCell=TRUE,
Pathway_list=Genes_by_pathway_kegg,
chrom_ld = chrom_ld,
scPagwasSession="scPagwasSession")
##------ Wed Mar 16 13:32:44 2022 ------##
##------ Wed Mar 16 13:32:44 2022 ------##
##------ Wed Mar 16 13:32:51 2022 ------##
##------ Wed Mar 16 13:33:09 2022 ------##
##------ Wed Mar 16 13:33:09 2022 ------##
##------ Wed Mar 16 13:33:11 2022 ------##
SOAR::Store(gtf_df)
SOAR::Store(block_annotation)
SOAR::Store(scRNAexample)
SOAR::Store(Genes_by_pathway_kegg)
SOAR::Store(chrom_ld)
SOAR::Store(GWAS_summ_example)
message(paste(utils::timestamp(quiet = T), ' ******* 7th: link_pwpca_block function start!! ********',sep = ''))
##------ Wed Mar 16 13:36:04 2022 ------##
#timestart<-Sys.time()
Pagwas <- link_pwpca_block(Pagwas)
message(paste(utils::timestamp(quiet = T), ' ******* 8th: Pagwas_perform_regression function start!! ********',sep = ''))
##------ Wed Mar 16 13:36:09 2022 ------##
Pagwas <- Pagwas_perform_regression(Pagwas, iters = 200,n.cores=1)
names(Pagwas)
message(paste(utils::timestamp(quiet = T), ' ******* 7th: link_scCell_pwpca_block function start!! ********',sep = ''))
##------ Wed Mar 16 13:38:20 2022 ------##
Pagwas <- link_scCell_pwpca_block(Pagwas)
message(paste(utils::timestamp(quiet = T), ' ******* 8th: scPagwas_perform_score function start!! ********',sep = ''))
##------ Wed Mar 16 13:38:35 2022 ------##
Pagwas <- scPagwas_perform_score(Pagwas)
library(Seurat)
library(scPagwas)
library(SOAR)
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
CD8+T cell"
Idents(scRNAexample)<-scRNAexample@meta.data$anno
#LD data
data(chrom_ld)
usethis::use_version()
library(Seurat)
library(scPagwas)
library(SOAR)
## basic example code
#Input pathway gene list, you can construct with youself.
data(Genes_by_pathway_kegg)
#Input GWAS summry data(data.frame).
data(GWAS_summ_example)
#gene annotation files.
data(gtf_df)
#Single cell example data.
data(scRNAexample)
#LD data
data(chrom_ld)
##create a session for internal storage
